{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","provider/restaurantFetch.js","views/restaurants/Restaurants.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","Loader","className","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getRestaurants","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteRestaurant","delete","addRestaurant","restaurant","reponse","put","post","Restaurants","useState","restaurants","setRestaurants","setError","history","useHistory","useEffect","resp","console","log","fetch","deleteFunction","old","filter","u","_id","xs","sm","onClick","push","scope","length","map","name","address","user","firstName","lastName"],"mappings":"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","file":"static/js/7.aa4d0642.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod',\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addRestaurant = async (restaurant, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/restaurants/${id}`, restaurant, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/restaurants`, restaurant, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport {\r\n  getRestaurants,\r\n  deleteRestaurant,\r\n} from \"../../provider/restaurantFetch\";\r\n\r\nconst Restaurants = () => {\r\n  /** State */\r\n  const [restaurants, setRestaurants] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getRestaurants();\r\n\r\n      resp?.status ? setRestaurants([...resp?.data]) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteRestaurant(id);\r\n\r\n    if (resp.status) {\r\n      setRestaurants((old) => old.filter((u) => u._id !== id));\r\n    }\r\n  };\r\n\r\n  const handleNavigation = (id) => {\r\n    history.push(`/detail-restaurant/${id}`);\r\n  };\r\n\r\n  const ajout = () => {\r\n    history.push(`/ajout-restaurant`);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    history.push(`/ajout-restaurant/${id}`);\r\n  };\r\n\r\n  if (restaurants === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Listes des Restaurants</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => ajout()}\r\n                  >\r\n                    Ajout\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Address</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Commercant</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {restaurants.length > 0 ? (\r\n                  restaurants.map((restaurant) => (\r\n                    <CTableRow key={restaurant._id}>\r\n                      <CTableDataCell>{restaurant.name}</CTableDataCell>\r\n                      <CTableDataCell>{restaurant.address}</CTableDataCell>\r\n                      <CTableDataCell>{restaurant.status}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        {restaurant?.user?.firstName} {restaurant?.user?.lastName}\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color={\"primary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => handleNavigation(restaurant._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Voir{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"secondary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => edit(restaurant._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Editer{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"danger\"}\r\n                          onClick={() => deleteFunction(restaurant._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Supprimer{\" \"}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{\"NO Items\"}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n"],"sourceRoot":""}