{"version":3,"sources":["views/administrateurs/AjoutAdministrateur.js","configs/variable.js","components/Message.js","provider/userFetch.js"],"names":["schemaUser","yup","shape","firstName","required","lastName","email","password","AjoutAdministrateur","useState","message","setMessage","success","setSuccess","error","setError","history","useHistory","id","useParams","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","useEffect","console","log","fetch","a","getUsers","resp","status","data","onSubmit","body","role","registerUser","xs","className","sm","color","onClick","push","md","htmlFor","type","invalid","paswword","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","config","headers","endpoint","url","axios","get","response","deleteUser","delete","user","reponse","put","post","authentification"],"mappings":"4RA2BMA,EAAaC,MAAaC,MAAM,CACpCC,UAAWF,MAAaG,SAAS,yBACjCC,SAAUJ,MAAaG,SAAS,wBAChCE,MAAOL,MAEJK,MAAM,0BACNF,SAAS,qBACZG,SAAUN,MAAaG,SAAS,2BAoLnBI,UAjLa,WAAO,IAAD,QAEhC,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGIC,EAAUC,cACRC,EAAOC,cAAPD,GAGN,EAMIE,YAAQ,CACVC,SAAUC,YAAYtB,GACtBuB,KAAM,cAPNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAAcC,EAHrC,EAGqCA,QACnCC,EAJF,EAIEA,WACAC,EALF,EAKEA,SAOFC,qBAAU,WAGR,GAFAC,QAAQC,IAAI,uCAERhB,EAAI,CAAC,IACQiB,EADT,uCACN,4BAAAC,EAAA,sEACqBC,YAAS,KAAMnB,GADpC,QAGE,QAFMoB,EADR,cAGE,IAAIA,OAAJ,EAAIA,EAAMC,SACRR,EAAS,YAAD,OAAcO,QAAd,IAAcA,OAAd,EAAcA,EAAME,KAAKrC,WACjC4B,EAAS,WAAD,OAAaO,QAAb,IAAaA,OAAb,EAAaA,EAAME,KAAKnC,UAChC0B,EAAS,QAAD,OAAUO,QAAV,IAAUA,OAAV,EAAUA,EAAME,KAAKlC,OAC7ByB,EAAS,WAAY,KAErBpB,EAAU,OAAC2B,QAAD,IAACA,OAAD,EAACA,EAAMxB,OATrB,2CADM,qDAcNqB,OAED,CAACjB,EAAIa,IAER,IAAMU,EAAQ,uCAAG,WAAOD,GAAP,qBAAAJ,EAAA,yDACXE,EAAO,KACLI,EAFS,2BAEGF,GAFH,IAESG,KAAM,WAE1Bd,EAJW,uBAMbhB,GAAW,GACXE,GAAS,GAPI,SAQA6B,YAAaF,EAAMxB,GARnB,OAQboB,EARa,eAWf,UAAIA,SAAJ,aAAI,EAAMC,SAERT,EAAW,aACXA,EAAW,YACXA,EAAW,SACXA,EAAW,YAEXjB,GAAW,KAEXE,GAAS,GACTJ,EAAU,UAAC2B,SAAD,aAAC,EAAMxB,QArBJ,2CAAH,sDAsCd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACCA,GAAS,eAAC,IAAD,eAAWJ,KACpBE,GAAW,eAAC,IAAD,2CACZ,cAAC,IAAD,CAAMiC,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,4DAEF,cAAC,IAAD,CAAMA,GAAI,EAAV,SACE,cAAC,IAAD,CAAcD,UAAU,iBAAxB,SACE,cAAC,IAAD,CACEE,MAAM,oBACNF,UAAU,OACVG,QAAS,WA7BzBjC,EAAQkC,KAAR,qBA0Bc,6BAWR,cAAC,IAAD,UACE,eAAC,IAAD,CACEJ,UAAS,mCACPjB,GAAW,iBAEbY,SAAUhB,EAAagB,GAJzB,UAME,eAAC,IAAD,CAAMU,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,uBACA,cAAC,IAAD,aACEC,KAAK,OACLnC,GAAG,YACHd,UAAQ,GACJoB,EAAS,eAEf,cAAC,IAAD,CAAe8B,SAAO,EAAtB,mBACG3B,EAAOxB,iBADV,aACG,EAAkBO,aAGvB,eAAC,IAAD,CAAMyC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,WAApB,sBACA,cAAC,IAAD,aACEC,KAAK,OACLnC,GAAG,WACHd,UAAQ,GACJoB,EAAS,cAEf,cAAC,IAAD,CAAe8B,SAAO,EAAtB,mBACG3B,EAAOtB,gBADV,aACG,EAAiBK,aAGtB,eAAC,IAAD,CAAMyC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,QAApB,mBACA,cAAC,IAAD,aACEC,KAAK,QACLnC,GAAG,QACHd,UAAQ,GACJoB,EAAS,WAEf,cAAC,IAAD,CAAe8B,SAAO,EAAtB,mBAAwB3B,EAAOrB,aAA/B,aAAwB,EAAcI,aAExC,eAAC,IAAD,CAAMyC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,WAApB,sBACA,cAAC,IAAD,aACEC,KAAK,OACLnC,GAAG,WACHd,UAAQ,GACJoB,EAAS,cAEf,cAAC,IAAD,CAAe8B,SAAO,EAAtB,mBACG3B,EAAO4B,gBADV,aACG,EAAiB7C,aAGtB,cAAC,IAAD,CAAMmC,GAAI,GAAV,SACE,cAAC,IAAD,CACEG,MAAM,UACNK,KAAK,SACLP,UAAWlB,EAAe,WAAa,IAHzC,qC,iCCtMhB,kCAAO,IAAM4B,EAAW,CACpBC,IAAK,OACLC,cAAe,wBACfC,aAAa,wCACbC,cAAc,0B,iCCJlB,uBAGMC,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACvB,OAAO,cAAC,IAAD,CAAQf,MAAOc,EAAf,SACDC,KAIVF,EAAQG,aAAe,CACnBF,QAAS,QAGED,O,mOCVFxB,EAAQ,uCAAG,sDAAAD,EAAA,6DAAOiB,EAAP,+BAAc,KAAMnC,EAApB,+BAAyB,KAAzB,SAGV+C,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1ES,EAAM,KAGNA,EADAlD,EACG,UAAOiD,EAAP,sBAA6BjD,GACzBmC,EACJ,UAAOc,EAAP,2BAAkCd,GAElC,UAAMc,EAAN,cAlBS,SAqBOE,IAAMC,IAAN,UAAaF,GAAOH,GArB3B,uBAqBRzB,EArBQ,EAqBRA,KArBQ,kBAuBT,CAACD,QAAQ,EAAMC,SAvBN,yCAyBV9B,EAAU,KAAM6D,UAAY,KAAMA,SAAS/B,KAAK9B,QAC5C,KAAM6D,SAAS/B,KAAK9B,QACpB,KAAMA,QA3BA,kBA6BT,CAAC6B,QAAQ,EAAOzB,MAAOJ,IA7Bd,0DAAH,qDAiCR8D,EAAU,uCAAG,WAAOtD,GAAP,uBAAAkB,EAAA,sEAGZ6B,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAT5D,SAWKU,IAAMI,OAAN,UAAgBN,EAAhB,sBAAsCjD,GAAM+C,GAXjD,uBAWVzB,EAXU,EAWVA,KAXU,kBAaX,CAACD,QAAQ,EAAMC,SAbJ,yCAeZ9B,EAAU,KAAM6D,UAAY,KAAMA,SAAS/B,KAAK9B,QAC5C,KAAM6D,SAAS/B,KAAK9B,QACpB,KAAMA,QAjBE,kBAmBX,CAAC6B,QAAQ,EAAOzB,MAAOJ,IAnBZ,0DAAH,sDAuBVkC,EAAY,uCAAG,WAAO8B,GAAP,qCAAAtC,EAAA,yDAAalB,EAAb,+BAAkB,KAAlB,SAGd+C,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1EgB,EAAU,MAEVzD,EAbgB,iCAcCmD,IAAMO,IAAN,UAAaT,EAAb,sBAAmCjD,GAAMwD,EAAMT,GAdhD,OAchBU,EAdgB,gDAgBCN,IAAMQ,KAAN,UAAcV,EAAd,cAAoCO,EAAMT,GAhB3C,QAgBhBU,EAhBgB,wCAmBb,CAACpC,QAAQ,EAAMC,KAAI,UAAEmC,SAAF,aAAE,EAASnC,OAnBjB,yCAqBd9B,EAAU,KAAM6D,UAAY,KAAMA,SAAS/B,KAAK9B,QAC5C,KAAM6D,SAAS/B,KAAK9B,QACpB,KAAMA,QAvBI,kBAyBb,CAAC6B,QAAQ,EAAOzB,MAAOJ,IAzBV,0DAAH,sDA6BZoE,EAAgB,uCAAI,WAAOJ,GAAP,uBAAAtC,EAAA,sEAGnB6B,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aATrD,SAWFU,IAAMQ,KAAN,UAAcV,EAAd,oBAA0CO,EAAMT,GAX9C,uBAWjBzB,EAXiB,EAWjBA,KAXiB,kBAalB,CAACD,QAAQ,EAAMC,SAbG,yCAenB9B,EAAU,KAAM6D,UAAY,KAAMA,SAAS/B,KAAK9B,QAC5C,KAAM6D,SAAS/B,KAAK9B,QACpB,KAAMA,QAjBS,kBAmBlB,CAAC6B,QAAQ,EAAOzB,MAAOJ,IAnBL,0DAAJ","file":"static/js/31.4f5bfba3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { registerUser, getUsers } from \"../../provider/userFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  firstName: yup.string().required(\"firstName is required\"),\r\n  lastName: yup.string().required(\"lastName is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"email must email valid\")\r\n    .required(\"email is required\"),\r\n  password: yup.string().required(\"password are required\"),\r\n});\r\n\r\nconst AjoutAdministrateur = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getUsers(null, id);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"firstName\", resp?.data.firstName);\r\n          setValue(\"lastName\", resp?.data.lastName);\r\n          setValue(\"email\", resp?.data.email);\r\n          setValue(\"password\", \"\");\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [id, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n    const body = { ...data, role: \"admin\" };\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await registerUser(body, id);\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n      resetField(\"firstName\");\r\n      resetField(\"lastName\");\r\n      resetField(\"email\");\r\n      resetField(\"password\");\r\n\r\n      setSuccess(true);\r\n    } else {\r\n      setError(true);\r\n      setMessage(resp?.error);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(`/administrateurs`);\r\n  };\r\n\r\n  /* console.log(\r\n    \"errors\",\r\n    errors,\r\n    isSubmitted, // true si après l'envoi du formulaire\r\n    isSubmitSuccessful, // true si formulaire a été soumis avec succès sans aucun rejet ou a été lancé dans le rappel\r\n    isSubmitting, // true si formulaire est en cours de soumission\r\n    isValid // true si formulaire ne contient aucune erreur\r\n  ); */\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Administrateur</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"firstName\">firstName</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"firstName\"\r\n                  required\r\n                  {...register(\"firstName\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.firstName?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">lastName</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"lastName\"\r\n                  required\r\n                  {...register(\"lastName\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.lastName?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"email\">email</CFormLabel>\r\n                <CFormInput\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  required\r\n                  {...register(\"email\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.email?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"password\">paswword</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"password\"\r\n                  required\r\n                  {...register(\"password\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.paswword?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default AjoutAdministrateur;\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}"],"sourceRoot":""}