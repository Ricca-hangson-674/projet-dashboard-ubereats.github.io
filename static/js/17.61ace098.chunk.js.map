{"version":3,"sources":["configs/variable.js","components/Message.js","provider/categorieFetch.js","provider/optionListFetch.js","provider/foodFetch.js","views/foods/AjoutFood.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","getCategories","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","addCategorie","categorie","reponse","put","post","getOptionLists","addOptionList","optionList","getFoods","addFood","food","schemaUser","yup","shape","name","required","description","price","priceDrop","category","optionLists","isPopular","available","promotion","AjoutFood","useState","setMessage","success","setSuccess","setError","categories","setCategories","setOptionLists","history","useHistory","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurantParam","has","categoryParam","optionListsParam","console","log","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","control","useEffect","resp","resp1","map","o","value","_id","label","fetch","onSubmit","body","restaurant","length","optionListFor","foods","xs","className","sm","onClick","push","md","htmlFor","type","invalid","disabled","c","to","render","field","onChange","onBlur","defaultValue","isMulti","options","style","display"],"mappings":"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","file":"static/js/17.61ace098.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptionLists = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/optionLists/${id}` : `${endpoint}/api/optionLists`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOptionList = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/optionLists/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOptionList = async (optionList, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/optionLists/${id}`, optionList, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/optionLists`, optionList, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSwitch,\r\n  CFormSelect,\r\n} from \"@coreui/react\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getFoods, addFood } from \"../../provider/foodFetch\";\r\nimport { getOptionLists, addOptionList } from \"../../provider/optionListFetch\";\r\nimport { getCategories, addCategorie } from \"../../provider/categorieFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  description: yup.string().required(\"description is required\"),\r\n  price: yup.number().required(\"price are required\"),\r\n  priceDrop: yup.number(),\r\n  category: yup.string().required(\"category are required\"),\r\n  optionLists: yup.array(),\r\n  isPopular: yup.boolean(),\r\n  available: yup.boolean(),\r\n  promotion: yup.boolean(),\r\n  // countInStock: yup.number().required(\"priceDrop are required\"),\r\n});\r\n\r\nconst AjoutFood = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [categories, setCategories] = useState(null);\r\n  const [optionLists, setOptionLists] = useState([]);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const restaurantParam = paramsJS.has(\"restaurant\")\r\n    ? paramsJS.get(\"restaurant\")\r\n    : \"restaurant\";\r\n  const categoryParam = paramsJS.has(\"category\")\r\n    ? paramsJS.get(\"category\")\r\n    : \"category\";\r\n  const optionListsParam = paramsJS.has(\"optionLists\")\r\n    ? paramsJS.get(\"optionLists\")\r\n    : [];\r\n\r\n  console.log(\r\n    \"params\",\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\")),\r\n    categoryParam,\r\n    optionListsParam,\r\n    restaurantParam\r\n  );\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n    // defaultValues: { optionLists, category },\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts \");\r\n\r\n    async function fetch() {\r\n      const resp = await getOptionLists(null, null);\r\n\r\n      const resp1 = await getCategories(null, null);\r\n\r\n      if (resp?.status) {\r\n        setOptionLists([\r\n          ...resp.data.map((o) => {\r\n            return { value: o._id, label: o.name };\r\n          }),\r\n        ]);\r\n      } else {\r\n        setMessage(resp?.error);\r\n      }\r\n\r\n      if (resp1?.status) {\r\n        setCategories([...resp1.data]);\r\n      } else {\r\n        setMessage(resp1?.error);\r\n      }\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  /** Dependency */\r\n  useEffect(() => {\r\n    console.log(\"useEffect, Dependency\");\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getFoods(null, null);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"description\", resp?.data.description);\r\n          setValue(\"price\", resp?.data.price);\r\n          setValue(\"priceDrop\", resp?.data.priceDrop);\r\n          setValue(\"category\", resp?.data.category);\r\n          setValue(\"optionLists\", resp?.data.optionLists);\r\n          setValue(\"isPopular\", resp?.data.isPopular);\r\n          setValue(\"available\", resp?.data.available);\r\n          setValue(\"promotion\", resp?.data.promotion);\r\n          // setValue(\"countInStock\", resp?.data.countInStock);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [id, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n \r\n    const body = { ...data, optionLists: data.optionLists.map((o) => o.value) };\r\n\r\n    console.log(\"onSubmit\", data, body);\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addFood(body, id);\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n\r\n      resetField(\"name\");\r\n      resetField(\"description\");\r\n      resetField(\"price\");\r\n      resetField(\"priceDrop\");\r\n      resetField(\"category\");\r\n      resetField(\"optionLists\");\r\n      resetField(\"isPopular\");\r\n      resetField(\"available\");\r\n      resetField(\"promotion\");\r\n      // resetField(\"countInStock\");\r\n\r\n      if (body.category) {\r\n        if (restaurantParam)\r\n        await addCategorie({restaurant: restaurantParam}, body.category)\r\n      }\r\n\r\n      if (body.optionLists.length) {\r\n        for (const optionListFor of body.optionLists) {\r\n          console.log('optionListFor', optionListFor)\r\n          await addOptionList({foods: [resp?.data?._id]}, optionListFor)\r\n        }\r\n      }\r\n\r\n      setSuccess(true);\r\n    } else {\r\n      setError(true);\r\n      setMessage(resp?.error);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`);\r\n  };\r\n\r\n  console.log(\"errors\", errors);\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Food</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  required\r\n                  {...register(\"description\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.description?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  required\r\n                  {...register(\"price\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"priceDrop\">PriceDrop</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"priceDrop\"\r\n                  {...register(\"priceDrop\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.priceDrop?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"isPopular\"\r\n                  id=\"isPopular\"\r\n                  {...register(\"isPopular\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"available\"\r\n                  id=\"available\"\r\n                  {...register(\"available\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"promotion\"\r\n                  id=\"promotion\"\r\n                  {...register(\"promotion\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"categorie\">Categorie</CFormLabel>\r\n                <CFormSelect\r\n                  aria-label=\"Categorie\"\r\n                  id=\"categorie\"\r\n                  {...register(\"category\")}\r\n                >\r\n                  <option disabled>...</option>\r\n                  {categories?.length &&\r\n                    categories.map((c) => (\r\n                      <option value={c._id} key={c._id}>\r\n                        {c.name}\r\n                      </option>\r\n                    ))}\r\n                </CFormSelect>\r\n                <small className=\"form-text text-muted\">\r\n                  <Link to={`/ajout-categorie?restaurant=${restaurantParam}`}>\r\n                    Ajouter une categorie\r\n                  </Link>{\" \"}\r\n                </small>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"optionLists\">Option Liste</CFormLabel>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"optionLists\"\r\n                  render={({\r\n                    field: { onChange, onBlur, value, name },\r\n                    // field,\r\n                    // fieldState: { error },\r\n                  }) => (\r\n                    <>\r\n                      <Select\r\n                        defaultValue={value}\r\n                        value={value}\r\n                        name={name}\r\n                        onBlur={onBlur}\r\n                        onChange={onChange}\r\n                        // {...field}\r\n                        isMulti\r\n                        options={optionLists}\r\n                      />\r\n                      <small className=\"form-text text-muted\">\r\n                        <Link\r\n                          to={`/ajout-optionList?foods=${`foods`}&options=${`options`}`}\r\n                        >\r\n                          Ajouter un option Liste\r\n                        </Link>{\" \"}\r\n                      </small>\r\n                      {errors.optionLists?.message && (\r\n                        <div\r\n                          style={{ display: \"block\" }}\r\n                          className=\"invalid-feedback\"\r\n                        >\r\n                          {errors.optionLists?.message}\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                />\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutFood;\r\n"],"sourceRoot":""}