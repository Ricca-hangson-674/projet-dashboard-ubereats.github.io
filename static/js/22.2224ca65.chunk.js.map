{"version":3,"sources":["views/administrateurs/DetailAdministrateur.js","configs/variable.js","components/Message.js","components/Loader.js","provider/userFetch.js"],"names":["DetailAdministrateur","id","useParams","history","useHistory","useState","admin","setAdmin","error","setError","useEffect","a","getUsers","resp","status","data","console","log","fetch","deleteFunction","deleteUser","push","xs","className","sm","color","onClick","_id","firstName","lastName","email","createdAt","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","type","config","headers","endpoint","url","axios","get","message","response","delete","registerUser","user","reponse","put","post","authentification"],"mappings":"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","file":"static/js/22.2224ca65.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableRow,\r\n  CButtonGroup,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getUsers, deleteUser } from \"../../provider/userFetch\";\r\n\r\nconst DetailAdministrateur = () => {\r\n  /**Params Route */\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  /** State */\r\n  const [admin, setAdmin] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getUsers(null, id);\r\n\r\n      resp?.status ? setAdmin(resp?.data) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, [id]);\r\n\r\n  const back = () => {\r\n    history.push(`/administrateurs`);\r\n  };\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteUser(id);\r\n\r\n    if (resp.status) {\r\n      history.push(`/administrateurs`);\r\n    }\r\n  };\r\n\r\n  if (admin === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n  return (\r\n    <>\r\n      <Authentification />\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Administrateur {id}</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-danger\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => deleteFunction(admin?._id)}\r\n                    >\r\n                      Suppprimer\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableBody>\r\n                  <CTableRow>\r\n                    <CTableDataCell>firstName</CTableDataCell>\r\n                    <CTableDataCell>{admin.firstName}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>lastName</CTableDataCell>\r\n                    <CTableDataCell>{admin.lastName}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>email</CTableDataCell>\r\n                    <CTableDataCell>{admin.email}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Creation</CTableDataCell>\r\n                    <CTableDataCell>{admin.createdAt}</CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailAdministrateur;\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}"],"sourceRoot":""}