{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","provider/discoveryTableFetch.js","views/QRCodeGenerator/qrGenerator.js","views/discoveryTable/DiscoveryTable.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","Loader","className","getDiscoveryTables","a","idRestaurant","idDiscoveryTable","config","headers","endpoint","url","axios","get","data","status","message","response","error","updateDiscoverytable","body","mode","post","put","console","log","QRGenerator","props","valueString","documentId","id","value","size","bgColor","fgColor","level","includeMargin","Discoverytable","useState","discoveryTables","setDiscoveryTables","setError","visible","setVisible","idQRCode","setIdQRCode","history","useHistory","useParams","useEffect","resp","discoverytable","fetch","deleteFunction","old","filter","u","_id","edit","push","xs","sm","onClick","scope","length","map","d","code","onClose","download","href","document","getElementById","toDataURL"],"mappings":"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","file":"static/js/18.fc488624.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getDiscoveryTables = async (\r\n  idRestaurant = null,\r\n  idDiscoveryTable = null\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const endpoint =\r\n      variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n    const url = idDiscoveryTable\r\n      ? `${endpoint}/api/restaurants/${idRestaurant}/discoverytable?id=${idDiscoveryTable}`\r\n      : `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`\r\n\r\n    const { data } = await axios.get(`${url}`, config)\r\n\r\n    return { status: true, data }\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n\r\n    return { status: false, error: message }\r\n  }\r\n}\r\n\r\nexport const updateDiscoverytable = async (\r\n  idRestaurant,\r\n  body,\r\n  mode = 'post'\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const endpoint =\r\n      variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n    let data = null\r\n\r\n    if (mode === 'post') {\r\n      data = await axios.post(\r\n        `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`,\r\n        body,\r\n        config\r\n      )\r\n    } else if (mode === 'update') {\r\n      data = await axios.put(\r\n        `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`,\r\n        body,\r\n        config\r\n      )\r\n    }\r\n\r\n    console.log('data', data)\r\n\r\n    return { status: true, data }\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n\r\n    return { status: false, error: message }\r\n  }\r\n}\r\n","import React from 'react';\nimport QRCode from 'qrcode.react';\n\nconst QRGenerator = props => {\n  const { valueString, documentId } = props;\n\n  return (\n    <div>\n      <QRCode\n        id={documentId}\n        value={valueString}\n        size={256}\n        bgColor={'#ffffff'}\n        fgColor={'#000000'}\n        level={'H'}\n        includeMargin={true}\n      />\n    </div>\n  );\n};\n\nexport default QRGenerator;\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n  CButtonGroup,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport QRGenerator from '../QRCodeGenerator/qrGenerator'\r\n\r\nimport { variable } from '../../configs/variable'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport {\r\n  getDiscoveryTables,\r\n  updateDiscoverytable,\r\n} from '../../provider/discoveryTableFetch'\r\n\r\n// import { variable } from '../../configs/variable'\r\n\r\nconst Discoverytable = () => {\r\n  /** State */\r\n  const [discoveryTables, setDiscoveryTables] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [visible, setVisible] = useState(false)\r\n  const [idQRCode, setIdQRCode] = useState(null)\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { idRestaurant } = useParams()\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Dependency', idRestaurant)\r\n\r\n    async function fetch() {\r\n      const resp = await getDiscoveryTables(idRestaurant)\r\n\r\n      resp?.status\r\n        ? setDiscoveryTables([...resp?.data?.discoverytable])\r\n        : setError(resp?.error)\r\n    }\r\n\r\n    fetch()\r\n  }, [idRestaurant])\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await updateDiscoverytable(idRestaurant, { id }, 'update')\r\n\r\n    if (resp.status) {\r\n      setDiscoveryTables((old) => old.filter((u) => u._id !== id))\r\n    }\r\n  }\r\n\r\n  const edit = (idRestaurant, idDiscoveryTable) => {\r\n    history.push(`/edit-discovery-table/${idRestaurant}?d=${idDiscoveryTable}`)\r\n  }\r\n\r\n  const generateQRCode = (id) => {\r\n    setVisible(true)\r\n    setIdQRCode(id)\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  if (discoveryTables === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Authentification />\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Listes des DisciveryTables</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => edit(idRestaurant, 'default')}\r\n                    >\r\n                      Ajout\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableHead>\r\n                  <CTableRow>\r\n                    <CTableHeaderCell scope=\"col\">Code</CTableHeaderCell>\r\n                    <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {discoveryTables.length > 0 ? (\r\n                    discoveryTables.map((d) => (\r\n                      <CTableRow key={d._id}>\r\n                        <CTableDataCell>{d.code}</CTableDataCell>\r\n                        <CTableDataCell>\r\n                          <CButton\r\n                            color={'secondary'}\r\n                            className=\"m-1\"\r\n                            onClick={() => edit(idRestaurant, d._id)}\r\n                          >\r\n                            {' '}\r\n                            Editer{' '}\r\n                          </CButton>\r\n                          <CButton\r\n                            color={'danger'}\r\n                            className=\"m-1\"\r\n                            onClick={() => deleteFunction(d._id)}\r\n                          >\r\n                            {' '}\r\n                            Supprimer{' '}\r\n                          </CButton>\r\n                          <CButton\r\n                            color={'secondary'}\r\n                            onClick={() => generateQRCode(d.code)}\r\n                          >\r\n                            {' '}\r\n                            QR code{' '}\r\n                          </CButton>\r\n                        </CTableDataCell>\r\n                      </CTableRow>\r\n                    ))\r\n                  ) : (\r\n                    <h3>{'NO Items'}</h3>\r\n                  )}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {/* <CRow>\r\n      <QRCodeGenerator valueStrings={[\"azertty\", \"qsdff\"]} />\r\n      </CRow> */}\r\n\r\n      <CModal size=\"lg\" visible={visible} onClose={() => setVisible(false)}>\r\n        <CModalHeader onClose={() => setVisible(false)}>\r\n          <CModalTitle>QR Code {idQRCode && idQRCode}</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <QRGenerator\r\n            valueString={`${variable.endpointProd}?discovery-table=${idQRCode}&id=${idRestaurant}`}\r\n            documentId={idQRCode}\r\n          />\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          {\r\n            idQRCode && (\r\n            <a\r\n              className=\"btn btn-secondary\"\r\n              download=\"FILENAME.png\"\r\n              href={document.getElementById(idQRCode).toDataURL()}\r\n            >\r\n              Download\r\n            </a>\r\n            )\r\n          }\r\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Discoverytable\r\n"],"sourceRoot":""}