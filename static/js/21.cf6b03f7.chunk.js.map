{"version":3,"sources":["views/paiements/Paiements.js","configs/variable.js","components/Message.js","components/Loader.js","provider/paiementFetch.js"],"names":["Paiements","useState","paiements","setPaiements","error","setError","history","useHistory","useEffect","a","getPaiements","resp","status","data","console","log","fetch","deleteFunction","id","deletePaiement","old","filter","u","_id","xs","className","sm","color","onClick","push","scope","length","map","paiement","name","iban","montant","moment","datePaiement","local","format","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","config","headers","endpoint","url","axios","get","message","response","delete","addPaiement","reponse","put","post"],"mappings":"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","file":"static/js/21.cf6b03f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n  CButtonGroup,\r\n} from '@coreui/react'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\n\r\nimport { getPaiements, deletePaiement } from '../../provider/paiementFetch'\r\n\r\nimport moment from 'moment'\r\n\r\nconst Paiements = () => {\r\n  /** State */\r\n  const [paiements, setPaiements] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetch() {\r\n      const resp = await getPaiements()\r\n\r\n      resp?.status ? setPaiements([...resp?.data]) : setError(resp?.error)\r\n    }\r\n\r\n    fetch()\r\n  }, [])\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deletePaiement(id)\r\n\r\n    if (resp.status) {\r\n      setPaiements((old) => old.filter((u) => u._id !== id))\r\n    }\r\n  }\r\n\r\n  const ajout = () => {\r\n    history.push(`/ajout-paiement`)\r\n  }\r\n\r\n  const edit = (id) => {\r\n    history.push(`/ajout-paiement/${id}`)\r\n  }\r\n\r\n  if (paiements === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Listes des Paiements</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => ajout()}\r\n                  >\r\n                    Ajout\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">iban</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">montant</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">date</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {paiements.length > 0 ? (\r\n                  paiements.map((paiement) => (\r\n                    <CTableRow key={paiement._id}>\r\n                      <CTableDataCell>{paiement.name}</CTableDataCell>\r\n                      <CTableDataCell>{paiement.iban}</CTableDataCell>\r\n                      <CTableDataCell>{paiement.montant}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        {moment(paiement.datePaiement).local().format(\r\n                          'DD/MM/YYYY HH:mm'\r\n                        )}\r\n                      </CTableDataCell>\r\n                      <CTableDataCell></CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color={'secondary'}\r\n                          className=\"me-1\"\r\n                          onClick={() => edit(paiement._id)}\r\n                        >\r\n                          {' '}\r\n                          Editer{' '}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={'danger'}\r\n                          onClick={() => deleteFunction(paiement._id)}\r\n                        >\r\n                          {' '}\r\n                          Supprimer{' '}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{'NO Items'}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Paiements\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getPaiements = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/paiements/${id}` : `${endpoint}/api/paiements`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletePaiement = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/paiements/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addPaiement = async (paiement, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/paiements/${id}`, paiement, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/paiements`, paiement, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}