{"version":3,"sources":["views/foods/AjoutFood.js","configs/variable.js","components/Message.js","components/Loader.js","provider/optionListFetch.js","provider/foodFetch.js","provider/categorieFetch.js"],"names":["schemaUser","yup","shape","name","required","description","price","typeError","category","optionLists","isPopular","available","promotion","AjoutFood","useState","message","setMessage","success","setSuccess","error","setError","categories","setCategories","setOptionLists","visible","setVisible","handleFileSelect","e","a","history","useHistory","foodId","useParams","id","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurantParam","has","get","categoryParam","optionListsParam","console","log","useForm","resolver","yupResolver","mode","defaultValues","priceDrop","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","control","useEffect","getOptionLists","resp","getCategories","resp1","status","data","map","o","value","_id","label","fetch","getFoods","length","optionListTMP","onSubmit","body","addFood","addCategorie","restaurant","optionListFor","addOptionList","foods","xs","className","sm","color","onClick","push","htmlFor","style","display","type","onChange","noValidate","md","invalid","step","defaultValue","c","to","render","field","onBlur","isMulti","options","size","onClose","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","config","headers","endpoint","url","axios","response","deleteOptionList","delete","optionList","reponse","put","post","deletefood","food","categorie"],"mappings":"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","file":"static/js/10.e9faa7c5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSwitch,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport Select from 'react-select'\r\n\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\n\r\nimport { getFoods, addFood } from '../../provider/foodFetch'\r\nimport { getOptionLists, addOptionList } from '../../provider/optionListFetch'\r\nimport { getCategories, addCategorie } from '../../provider/categorieFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required('name is required'),\r\n  description: yup.string().required('description is required'),\r\n  price: yup\r\n    .number()\r\n    .typeError('price must be a `number` type')\r\n    .required('price are required'),\r\n  // priceDrop: yup.number(),\r\n  // priceDrop: yup.nullable(),\r\n  category: yup.string().required('categorie are required'),\r\n  optionLists: yup.array(),\r\n  isPopular: yup.boolean(),\r\n  available: yup.boolean(),\r\n  promotion: yup.boolean(),\r\n  // countInStock: yup.number().required(\"priceDrop are required\"),\r\n})\r\n\r\nconst AjoutFood = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [categories, setCategories] = useState(null)\r\n  const [optionLists, setOptionLists] = useState(null)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  /** Image */\r\n\r\n  /* const handleUploadJSON = () => {\r\n\r\n  } */\r\n\r\n  const handleFileSelect = async (e) => {\r\n    setVisible(true)\r\n  }\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { id: foodId } = useParams()\r\n  const paramQuery = window.location.hash\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf('?'))\r\n  )\r\n  const restaurantParam = paramsJS.has('restaurant')\r\n    ? paramsJS.get('restaurant')\r\n    : 'restaurant'\r\n  const categoryParam = paramsJS.has('category')\r\n    ? paramsJS.get('category')\r\n    : 'category'\r\n  const optionListsParam = paramsJS.has('optionLists')\r\n    ? paramsJS.get('optionLists')\r\n    : []\r\n\r\n  console.log(\r\n    'params',\r\n    paramQuery.substring(paramQuery.lastIndexOf('?')),\r\n    categoryParam,\r\n    optionListsParam,\r\n    restaurantParam\r\n  )\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n    // getValues,\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: 'onTouched',\r\n    defaultValues: { priceDrop: 0 },\r\n  })\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts ')\r\n\r\n    async function fetch() {\r\n      const resp = await getOptionLists(null, null)\r\n\r\n      const resp1 = await getCategories(null, null)\r\n\r\n      if (resp?.status) {\r\n        setOptionLists([\r\n          ...resp.data.map((o) => {\r\n            return { value: o._id, label: o.name }\r\n          }),\r\n        ])\r\n      } else {\r\n        setMessage(resp?.error)\r\n      }\r\n\r\n      if (resp1?.status) {\r\n        setCategories([...resp1.data])\r\n      } else {\r\n        setMessage(resp1?.error)\r\n      }\r\n    }\r\n\r\n    fetch()\r\n  }, [])\r\n\r\n  /** Dependency */\r\n  useEffect(() => {\r\n    console.log('useEffect, Dependency')\r\n\r\n    if (foodId) {\r\n      async function fetch() {\r\n        const resp = await getFoods(foodId)\r\n\r\n        console.log('resp', resp)\r\n\r\n        if (resp?.status) {\r\n          setValue('name', resp?.data.name)\r\n          setValue('description', resp?.data.description)\r\n          setValue('price', resp?.data.price)\r\n          setValue('priceDrop', resp?.data.priceDrop)\r\n          setValue('category', resp?.data.category._id)\r\n          setValue('isPopular', resp?.data.isPopular)\r\n          setValue('available', resp?.data.available)\r\n          setValue('promotion', resp?.data.promotion)\r\n          // setValue(\"countInStock\", resp?.data.countInStock);\r\n\r\n          if (resp?.data.optionLists) {\r\n            if (resp?.data.optionLists.length) {\r\n              /** optionLists */\r\n              const optionListTMP = resp?.data.optionLists.map((o) => {\r\n                return { value: o._id, label: o.name }\r\n              })\r\n              setValue('optionLists', optionListTMP)\r\n            }\r\n          }\r\n        } else {\r\n          setMessage(resp?.error)\r\n        }\r\n      }\r\n\r\n      fetch()\r\n    }\r\n  }, [foodId, setValue])\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null\r\n    let body = null\r\n\r\n    if (data?.optionLists) {\r\n      if (data?.optionLists?.length)\r\n        body = { ...data, optionLists: data.optionLists.map((o) => o.value) }\r\n    } else {\r\n      console.log('body', body)\r\n      body = { ...data }\r\n    }\r\n\r\n    console.log('onSubmit', data, body)\r\n    // console.log(\"isValid\", isValid);\r\n\r\n    if (isValid && body) {\r\n      /** reste */\r\n      setSuccess(false)\r\n      setError(false)\r\n      resp = await addFood(body, foodId)\r\n    }\r\n\r\n    if (resp?.status) {\r\n      if (!foodId) {\r\n        /** Reset */\r\n        resetField('name')\r\n        resetField('description')\r\n        resetField('price')\r\n        resetField('priceDrop')\r\n        resetField('category')\r\n        resetField('optionLists')\r\n        resetField('isPopular')\r\n        resetField('available')\r\n        resetField('promotion')\r\n        // resetField(\"countInStock\");\r\n      }\r\n\r\n      if (body.category) {\r\n        if (restaurantParam)\r\n          await addCategorie({ restaurant: restaurantParam }, body.category)\r\n      }\r\n\r\n      if (body.optionLists) {\r\n        if (body.optionLists.length) {\r\n          for (const optionListFor of body.optionLists) {\r\n            await addOptionList({ foods: [resp?.data?._id] }, optionListFor)\r\n          }\r\n        }\r\n      }\r\n\r\n      setSuccess(true)\r\n    } else {\r\n      setError(true)\r\n      setMessage(resp?.error)\r\n    }\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  if (categories === null || optionLists === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  console.log('errors', errors)\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Authentification />\r\n        {error && <Message> {message}</Message>}\r\n        {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Ajout Food</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRH\"\r\n                    >\r\n                      Ajout image\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRH\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                      onChange={handleFileSelect}\r\n                    />\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRHItem\"\r\n                    >\r\n                      Upload Items\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRHItem\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                    />\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm\r\n                noValidate\r\n                className={`row g-3`}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n              >\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    required\r\n                    {...register('name')}\r\n                    invalid={errors.name ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    required\r\n                    {...register('description')}\r\n                    invalid={errors.description ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.description?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    step={\"any\"}\r\n                    required\r\n                    {...register('price')}\r\n                    invalid={errors.price ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"priceDrop\">PriceDrop</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    id=\"priceDrop\"\r\n                    step={\"any\"}\r\n                    {...register('priceDrop')}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.priceDrop?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"isPopular\"\r\n                    id=\"isPopular\"\r\n                    {...register('isPopular')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"available\"\r\n                    id=\"available\"\r\n                    {...register('available')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"promotion\"\r\n                    id=\"promotion\"\r\n                    {...register('promotion')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"categorie\">Categorie</CFormLabel>\r\n                  <CFormSelect\r\n                    aria-label=\"Categorie\"\r\n                    id=\"categorie\"\r\n                    required\r\n                    {...register('category')}\r\n                    invalid={errors.category ? true : false}\r\n                    defaultValue={categories[0]?._id && categories[0]?._id}\r\n                  >\r\n                    {categories?.length &&\r\n                      categories.map((c) => (\r\n                        <option value={c._id} key={c._id}>\r\n                          {c.name}\r\n                        </option>\r\n                      ))}\r\n                  </CFormSelect>\r\n                  <CFormFeedback invalid>\r\n                    {errors.category?.message}\r\n                  </CFormFeedback>\r\n                  <small className=\"form-text text-muted\">\r\n                    <Link to={`/ajout-categorie?restaurant=${restaurantParam}`}>\r\n                      Ajouter une categorie\r\n                    </Link>{' '}\r\n                  </small>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"optionLists\">Option Liste</CFormLabel>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"optionLists\"\r\n                    render={({\r\n                      field: { onChange, onBlur, value, name },\r\n                      // field,\r\n                      // fieldState: { error },\r\n                    }) => (\r\n                      <>\r\n                        <Select\r\n                          defaultValue={value}\r\n                          value={value}\r\n                          name={name}\r\n                          onBlur={onBlur}\r\n                          onChange={onChange}\r\n                          // {...field}\r\n                          isMulti\r\n                          options={optionLists}\r\n                        />\r\n                        <small className=\"form-text text-muted\">\r\n                          <Link\r\n                            to={`/ajout-optionList?foods=${`foods`}&options=${`options`}`}\r\n                          >\r\n                            Ajouter un option Liste\r\n                          </Link>{' '}\r\n                        </small>\r\n                        {errors.optionLists?.message && (\r\n                          <div\r\n                            style={{ display: 'block' }}\r\n                            className=\"invalid-feedback\"\r\n                          >\r\n                            {errors.optionLists?.message}\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  />\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={isSubmitting ? 'disabled' : ' '}\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\r\n        <CModalHeader onClose={() => setVisible(false)}>\r\n          <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CModalTitle>Image</CModalTitle>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"primary\">Save changes</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\nexport default AjoutFood\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptionLists = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/optionLists/${id}` : `${endpoint}/api/optionLists`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOptionList = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/optionLists/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOptionList = async (optionList, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/optionLists/${id}`, optionList, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/optionLists`, optionList, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}