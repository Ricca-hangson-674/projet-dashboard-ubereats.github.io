{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["WidgetsDropdown","lazy","Dashboard","random","min","max","Math","floor","className","sm","id","color","icon","cilCloudDownload","map","value","active","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","xs","cols","md","title","percent","item","index","thin"],"mappings":"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","file":"static/js/29.b59f4060.chunk.js","sourcesContent":["import React, { lazy } from 'react'\n\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilCloudDownload,\n} from '@coreui/icons'\n\n\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\n\nconst Dashboard = () => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}