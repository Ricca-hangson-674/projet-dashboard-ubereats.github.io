{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","provider/userFetch.js","views/commercants/DetailCommercant.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","Loader","className","getUsers","a","type","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","delete","registerUser","user","reponse","put","post","authentification","DetailCommercant","useParams","history","useHistory","useState","commercant","setCommercant","setError","useEffect","resp","console","log","fetch","deleteFunction","push","xs","sm","onClick","_id","firstName","lastName","email","createdAt","restaurants","length","map","r","name"],"mappings":"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","file":"static/js/20.c24d619a.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableRow,\r\n  CButtonGroup,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { getUsers, deleteUser } from \"../../provider/userFetch\";\r\n\r\nconst DetailCommercant = () => {\r\n  /**Params Route */\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  /** State */\r\n  const [commercant, setCommercant] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getUsers(null, id);\r\n\r\n      resp?.status ? setCommercant(resp?.data) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, [id]);\r\n\r\n  const back = () => {\r\n    history.push(`/commercants`);\r\n  };\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteUser(id);\r\n\r\n    if (resp.status) {\r\n      history.push(`/commercants`);\r\n    }\r\n  };\r\n\r\n  if (commercant === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n  return (\r\n    <>\r\n      <Authentification />\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>commercant {id}</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-danger\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => deleteFunction(commercant?._id)}\r\n                    >\r\n                      Suppprimer\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableBody>\r\n                  <CTableRow>\r\n                    <CTableDataCell>firstName</CTableDataCell>\r\n                    <CTableDataCell>{commercant.firstName}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>lastName</CTableDataCell>\r\n                    <CTableDataCell>{commercant.lastName}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>email</CTableDataCell>\r\n                    <CTableDataCell>{commercant.email}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Creation</CTableDataCell>\r\n                    <CTableDataCell>{commercant.createdAt}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Restaurants</CTableDataCell>\r\n                    <CTableDataCell>\r\n                      {commercant.restaurants.length ? (\r\n                        commercant.restaurants.map((r) => (\r\n                          <span key={r._id}>\r\n                            {r.name} {\" || \"}{\" \"}\r\n                          </span>\r\n                        ))\r\n                      ) : (\r\n                        <h3>{\"NO Items\"}</h3>\r\n                      )}\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailCommercant;\r\n"],"sourceRoot":""}