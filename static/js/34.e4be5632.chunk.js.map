{"version":3,"sources":["views/pages/register/Register.js","configs/variable.js","components/Message.js","provider/userFetch.js"],"names":["schemaUser","yup","shape","firstName","required","lastName","email","password","confirmPassword","oneOf","Register","useState","message","setMessage","success","setSuccess","error","setError","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","onSubmit","data","a","resp","registerUser","status","className","md","lg","xl","to","color","active","tabIndex","noValidate","icon","cilUser","invalid","placeholder","autoComplete","cilLockLocked","type","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","getUsers","id","config","headers","endpoint","url","axios","get","response","deleteUser","delete","user","reponse","put","post","authentification"],"mappings":"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","file":"static/js/34.e4be5632.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormFeedback,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport Message from \"../../../components/Message\";\n\nimport { registerUser } from \"../../../provider/userFetch\";\n\nconst schemaUser = yup.object().shape({\n  firstName: yup.string().required(\"firstName is required\"),\n  lastName: yup.string().required(\"lastName is required\"),\n  email: yup\n    .string()\n    .email(\"email must email valid\")\n    .required(\"email is required\"),\n  password: yup.string().required(\"password are required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nconst Register = () => {\n  /** State */\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n\n  /** Form Hook */\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting, isValid },\n    resetField,\n  } = useForm({\n    resolver: yupResolver(schemaUser),\n    mode: \"onTouched\",\n  });\n\n  const onSubmit = async (data) => {\n    let resp = null;\n\n    if (isValid) {\n      /** reste */\n      setSuccess(false);\n      setError(false);\n      resp = await registerUser(data);\n    }\n\n    if (resp?.status) {\n      /** Reset */\n      resetField(\"firstName\");\n      resetField(\"lastName\");\n      resetField(\"email\");\n      resetField(\"password\");\n      resetField(\"confirmPassword\");\n\n      setSuccess(true);\n    } else {\n      setError(true);\n      setMessage(resp?.error);\n    }\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center mt-3\">\n          <CCol md={9} lg={7} xl={6}>\n            {error && <Message> {message}</Message>}\n            {success && (\n              <Message>\n                {`Success register`}\n\n                <Link to=\"/login\" className=\"my-2\">\n                  <CButton\n                    color=\"primary\"\n                    className=\"mt-3 my-2\"\n                    active\n                    tabIndex={-1}\n                  >\n                    Login Now!\n                  </CButton>\n                </Link>\n              </Message>\n            )}\n          </CCol>\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm noValidate onSubmit={handleSubmit(onSubmit)}>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      invalid={errors.firstName?.message ? true : false}\n                      placeholder=\"firstName\"\n                      autoComplete=\"firstName\"\n                      {...register(\"firstName\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.firstName?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      invalid={errors.lastName?.message ? true : false}\n                      placeholder=\"lastName\"\n                      autoComplete=\"lastName\"\n                      {...register(\"lastName\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.lastName?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      invalid={errors.email?.message ? true : false}\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      {...register(\"email\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.email?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      invalid={errors.password?.message ? true : false}\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      {...register(\"password\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.password?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      invalid={errors.confirmPassword?.message ? true : false}\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      {...register(\"confirmPassword\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.confirmPassword?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton\n                      className={(isSubmitting) ? `disabled` : \"\"}\n                      color=\"success\"\n                      type=\"submit\"\n                    >\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}"],"sourceRoot":""}