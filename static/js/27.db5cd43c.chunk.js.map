{"version":3,"sources":["views/categories/AjoutCategorie.js","configs/variable.js","components/Message.js","provider/categorieFetch.js"],"names":["schemaUser","yup","shape","name","required","description","restaurant","AjoutCategorie","useState","message","setMessage","success","setSuccess","error","setError","category","setCategory","history","useHistory","idCategory","useParams","id","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","has","get","console","log","useForm","resolver","yupResolver","mode","defaultValues","register","handleSubmit","formState","errors","isSubmitting","isValid","setValue","useEffect","fetch","a","getCategories","resp","status","data","_id","onSubmit","addCategorie","xs","className","sm","color","onClick","push","md","htmlFor","type","invalid","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","config","headers","endpoint","url","axios","response","categorie","reponse","put","post"],"mappings":"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","file":"static/js/27.db5cd43c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getCategories, addCategorie } from \"../../provider/categorieFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  description: yup.string().required(\"description is required\"),\r\n  restaurant: yup.string(),\r\n});\r\n\r\nconst AjoutCategorie = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [category, setCategory] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id: idCategory } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const restaurant = paramsJS.has(\"restaurant\")\r\n    ? paramsJS.get(\"restaurant\")\r\n    : \"restaurant\";\r\n\r\n  console.log(\r\n    \"params\",\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\")),\r\n    restaurant\r\n  );\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    // resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n    defaultValues: { restaurant },\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (idCategory) {\r\n      async function fetch() {\r\n        const resp = await getCategories(idCategory);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"description\", resp?.data.description);\r\n          setValue(\"restaurant\", resp?.data.restaurant._id);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [idCategory, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n\r\n    console.log('onSubmit', data)\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addCategorie(data, idCategory);\r\n\r\n      if (resp?.status) {\r\n        /** Reset */\r\n        // resetField(\"name\");\r\n        // resetField(\"description\");\r\n        // resetField(\"restaurant\");\r\n\r\n        setCategory(resp?.data._id);\r\n\r\n        setSuccess(true);\r\n      } else {\r\n        setError(true);\r\n        setMessage(resp?.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    if (restaurant) {\r\n      history.push(`/detail-restaurant/${restaurant}`);\r\n    } else {\r\n      history.push(`/ajout-food?category=${category}`);\r\n    }\r\n    \r\n  };\r\n\r\n  console.log('erros', errors)\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Categorie</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  required\r\n                  {...register(\"description\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.description?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutCategorie;\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}