{"version":3,"sources":["views/restaurants/AjoutRestaurant.js","configs/variable.js","components/Message.js","provider/userFetch.js","provider/restaurantFetch.js"],"names":["schemaUser","yup","shape","name","required","description","user","AjoutRestaurant","useState","message","setMessage","success","setSuccess","error","setError","commercants","setCommercants","errorCommercants","setErrorCommercants","visible","setVisible","handleFileSelect","e","a","history","useHistory","id","useParams","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","useEffect","getUsers","respCommercant","status","data","console","log","fetchCommercant","fetch","getRestaurants","resp","_id","onSubmit","addRestaurant","xs","className","sm","color","onClick","push","htmlFor","style","display","type","onChange","md","invalid","disabled","length","map","c","value","firstName","lastName","size","onClose","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","config","headers","endpoint","url","axios","get","response","deleteUser","delete","registerUser","reponse","put","post","authentification","deleteRestaurant","restaurant"],"mappings":"8SAiCMA,EAAaC,MAAaC,MAAM,CACpCC,KAAMF,MAAaG,SAAS,oBAC5BC,YAAaJ,MAAaG,SAAS,2BACnCE,KAAML,MAAaG,SAAS,sBAsNfG,UAnNS,WAAO,IAAD,MAE5B,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAgDR,oBAAS,GAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAIMC,EAAgB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACvBH,GAAW,GADY,2CAAH,sDAKlBI,EAAUC,cACRC,EAAOC,cAAPD,GAGN,EAMIE,YAAQ,CACVC,SAAUC,YAAY9B,GACtB+B,KAAM,cAPNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAAcC,EAHrC,EAGqCA,QACnCC,EAJF,EAIEA,WACAC,GALF,EAKEA,SAOFC,qBAAU,WAAM,4CAGd,4BAAAjB,EAAA,sEAC+BkB,YAAS,cADxC,QAGgB,QAFRC,EADR,cAGgB,IAAdA,OAAA,EAAAA,EAAgBC,QACZ3B,EAAe,YAAD,OAAK0B,QAAL,IAAKA,OAAL,EAAKA,EAAgBE,OACnC1B,EAAmB,OAACwB,QAAD,IAACA,OAAD,EAACA,EAAgB7B,OAL1C,4CAHc,sBAYd,GAXAgC,QAAQC,IAAI,uCADE,mCAUdC,GAEIrB,EAAI,CAAC,IACQsB,EADT,uCACN,4BAAAzB,EAAA,sEACqB0B,YAAevB,GADpC,QAGE,QAFMwB,EADR,cAGE,IAAIA,OAAJ,EAAIA,EAAMP,SACRJ,GAAS,OAAD,OAASW,QAAT,IAASA,OAAT,EAASA,EAAMN,KAAKzC,MAC5BoC,GAAS,cAAD,OAAgBW,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMN,KAAKvC,aACnCkC,GAAS,OAAD,OAASW,QAAT,IAASA,OAAT,EAASA,EAAMN,KAAKtC,KAAK6C,MAEjCzC,EAAU,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAMrC,OARrB,2CADM,qDAaNmC,OAED,CAACtB,EAAIa,KAER,IAAMa,GAAQ,uCAAG,WAAOR,GAAP,mBAAArB,EAAA,yDACX2B,EAAO,MAEPb,EAHW,uBAKbzB,GAAW,GACXE,GAAS,GANI,SAOAuC,YAAcT,EAAMlB,GAPpB,OAObwB,EAPa,eAUf,UAAIA,SAAJ,aAAI,EAAMP,SAERL,EAAW,QACXA,EAAW,eACXA,EAAW,QAEX1B,GAAW,KAEXE,GAAS,GACTJ,EAAU,UAACwC,SAAD,aAAC,EAAMrC,QAnBJ,2CAAH,sDA2Bd,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,IACCA,GAAS,eAAC,IAAD,eAAWJ,KACpBE,GAAW,eAAC,IAAD,2CACZ,cAAC,IAAD,CAAM2C,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,wDAEF,cAAC,IAAD,CAAMA,GAAI,EAAV,SACE,eAAC,IAAD,CAAcD,UAAU,iBAAxB,UACE,cAAC,IAAD,CACEE,MAAM,oBACNF,UAAU,OACVG,QAAS,WArB3BlC,EAAQmC,KAAR,iBAkBgB,oBAOA,uBACEJ,UAAU,+BACVK,QAAQ,WAFV,yBAMA,uBACElC,GAAG,WACHmC,MAAO,CACLC,QAAS,QAEXC,KAAK,OACLC,SAAU3C,cAMpB,cAAC,IAAD,UACE,eAAC,IAAD,CACEkC,UAAS,mCACPlB,GAAW,iBAEbe,SAAUnB,EAAamB,IAJzB,UAME,eAAC,IAAD,CAAMa,GAAI,EAAV,UACE,cAAC,IAAD,CAAYL,QAAQ,OAApB,kBACA,cAAC,IAAD,aACEG,KAAK,OACLrC,GAAG,OACHtB,UAAQ,GACJ4B,EAAS,UAEf,cAAC,IAAD,CAAekC,SAAO,EAAtB,mBAAwB/B,EAAOhC,YAA/B,aAAwB,EAAaM,aAEvC,eAAC,IAAD,CAAMwD,GAAI,EAAV,UACE,cAAC,IAAD,CAAYL,QAAQ,cAApB,yBACA,cAAC,IAAD,aACEG,KAAK,OACLrC,GAAG,cACHtB,UAAQ,GACJ4B,EAAS,iBAEf,cAAC,IAAD,CAAekC,SAAO,EAAtB,mBACG/B,EAAO9B,mBADV,aACG,EAAoBI,aAGzB,eAAC,IAAD,CAAMwD,GAAI,EAAV,UACE,cAAC,IAAD,CAAYL,QAAQ,OAApB,wBACC3C,EACC,eAAC,IAAD,eAAWA,KAEX,qCACE,eAAC,IAAD,yBAAaS,GAAG,OAAOtB,UAAQ,GAAK4B,EAAS,SAA7C,cACE,wBAAQmC,UAAQ,EAAhB,uBACCpD,EAAYqD,QACXrD,EAAYsD,KAAI,SAACC,GAAD,OACd,yBAAoBC,MAAOD,EAAEnB,IAA7B,UACGmB,EAAEE,UADL,IACiBF,EAAEG,WADNH,EAAEnB,YAKrB,cAAC,IAAD,CAAee,SAAO,EAAtB,mBACG/B,EAAO7B,YADV,aACG,EAAaG,gBAKtB,cAAC,IAAD,CAAM6C,GAAI,GAAV,SACE,cAAC,IAAD,CACEG,MAAM,UACNM,KAAK,SACLR,UAAWnB,EAAe,WAAa,IAHzC,mCAcZ,eAAC,IAAD,CAAQsC,KAAK,KAAKvD,QAASA,EAASwD,QAAS,kBAAMvD,GAAW,IAA9D,UACE,cAAC,IAAD,CAAcuD,QAAS,kBAAMvD,GAAW,IAAxC,SACE,cAAC,IAAD,6BAEF,cAAC,IAAD,UACA,cAAC,IAAD,6BAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAASqC,MAAM,YAAYC,QAAS,kBAAMtC,GAAW,IAArD,mBAGA,cAAC,IAAD,CAASqC,MAAM,UAAf,qC,iCCnPV,kCAAO,IAAMmB,EAAW,CACpBC,IAAK,OACLC,cAAe,wBACfC,aAAa,wCACbC,cAAc,0B,iCCJlB,uBAGMC,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACvB,OAAO,cAAC,IAAD,CAAQ1B,MAAOyB,EAAf,SACDC,KAIVF,EAAQG,aAAe,CACnBF,QAAS,QAGED,O,mOCVFxC,EAAQ,uCAAG,sDAAAlB,EAAA,6DAAOwC,EAAP,+BAAc,KAAMrC,EAApB,+BAAyB,KAAzB,SAGV2D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1ES,EAAM,KAGNA,EADA9D,EACG,UAAO6D,EAAP,sBAA6B7D,GACzBqC,EACJ,UAAOwB,EAAP,2BAAkCxB,GAElC,UAAMwB,EAAN,cAlBS,SAqBOE,IAAMC,IAAN,UAAaF,GAAOH,GArB3B,uBAqBRzC,EArBQ,EAqBRA,KArBQ,kBAuBT,CAACD,QAAQ,EAAMC,SAvBN,yCAyBVnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QA3BA,kBA6BT,CAACkC,QAAQ,EAAO9B,MAAOJ,IA7Bd,0DAAH,qDAiCRmF,EAAU,uCAAG,WAAOlE,GAAP,uBAAAH,EAAA,sEAGZ8D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAT5D,SAWKU,IAAMI,OAAN,UAAgBN,EAAhB,sBAAsC7D,GAAM2D,GAXjD,uBAWVzC,EAXU,EAWVA,KAXU,kBAaX,CAACD,QAAQ,EAAMC,SAbJ,yCAeZnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAjBE,kBAmBX,CAACkC,QAAQ,EAAO9B,MAAOJ,IAnBZ,0DAAH,sDAuBVqF,EAAY,uCAAG,WAAOxF,GAAP,qCAAAiB,EAAA,yDAAaG,EAAb,+BAAkB,KAAlB,SAGd2D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1EgB,EAAU,MAEVrE,EAbgB,iCAcC+D,IAAMO,IAAN,UAAaT,EAAb,sBAAmC7D,GAAMpB,EAAM+E,GAdhD,OAchBU,EAdgB,gDAgBCN,IAAMQ,KAAN,UAAcV,EAAd,cAAoCjF,EAAM+E,GAhB3C,QAgBhBU,EAhBgB,wCAmBb,CAACpD,QAAQ,EAAMC,KAAI,UAAEmD,SAAF,aAAE,EAASnD,OAnBjB,yCAqBdnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAvBI,kBAyBb,CAACkC,QAAQ,EAAO9B,MAAOJ,IAzBV,0DAAH,sDA6BZyF,EAAgB,uCAAI,WAAO5F,GAAP,uBAAAiB,EAAA,sEAGnB8D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aATrD,SAWFU,IAAMQ,KAAN,UAAcV,EAAd,oBAA0CjF,EAAM+E,GAX9C,uBAWjBzC,EAXiB,EAWjBA,KAXiB,kBAalB,CAACD,QAAQ,EAAMC,SAbG,yCAenBnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAjBS,kBAmBlB,CAACkC,QAAQ,EAAO9B,MAAOJ,IAnBL,0DAAJ,uD,iMCrFhBwC,EAAc,uCAAG,oDAAA1B,EAAA,6DAAOG,EAAP,+BAAY,KAAZ,SAGhB2D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAExES,EAAO9D,EAAE,UAAM6D,EAAN,4BAAkC7D,GAAlC,UAA4C6D,EAA5C,oBAXO,SAaCE,IAAMC,IAAN,UAAaF,GAAOH,GAbrB,uBAadzC,EAbc,EAadA,KAbc,kBAef,CAACD,QAAQ,EAAMC,SAfA,yCAiBhBnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAnBM,kBAqBf,CAACkC,QAAQ,EAAO9B,MAAOJ,IArBR,0DAAH,qDAyBd0F,EAAgB,uCAAG,WAAOzE,GAAP,uBAAAH,EAAA,sEAGlB8D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aATtD,SAWDU,IAAMI,OAAN,UAAgBN,EAAhB,4BAA4C7D,GAAM2D,GAXjD,uBAWhBzC,EAXgB,EAWhBA,KAXgB,kBAajB,CAACD,QAAQ,EAAMC,SAbE,yCAelBnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAjBQ,kBAmBjB,CAACkC,QAAQ,EAAO9B,MAAOJ,IAnBN,0DAAH,sDAuBhB4C,EAAa,uCAAG,WAAO+C,GAAP,qCAAA7E,EAAA,yDAAmBG,EAAnB,+BAAwB,KAAxB,SAGf2D,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBX,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1EgB,EAAU,MAEVrE,EAbiB,iCAcA+D,IAAMO,IAAN,UAAaT,EAAb,4BAAyC7D,GAAM0E,EAAYf,GAd3D,OAcjBU,EAdiB,gDAgBAN,IAAMQ,KAAN,UAAcV,EAAd,oBAA0Ca,EAAYf,GAhBtD,QAgBjBU,EAhBiB,wCAmBd,CAACpD,QAAQ,EAAMC,KAAI,UAAEmD,SAAF,aAAE,EAASnD,OAnBhB,yCAqBfnC,EAAU,KAAMkF,UAAY,KAAMA,SAAS/C,KAAKnC,QAC5C,KAAMkF,SAAS/C,KAAKnC,QACpB,KAAMA,QAvBK,kBAyBd,CAACkC,QAAQ,EAAO9B,MAAOJ,IAzBT,0DAAH","file":"static/js/26.cef3a5df.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Message from '../../components/Message'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { addRestaurant, getRestaurants } from '../../provider/restaurantFetch'\r\nimport { getUsers } from '../../provider/userFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required('name is required'),\r\n  description: yup.string().required('description is required'),\r\n  user: yup.string().required('user is required'),\r\n})\r\n\r\nconst AjoutRestaurant = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [commercants, setCommercants] = useState([])\r\n  const [errorCommercants, setErrorCommercants] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  /** Image */\r\n\r\n  const handleFileSelect = async (e) => {\r\n    setVisible(true)\r\n  }\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { id } = useParams()\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: 'onTouched',\r\n  })\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetchCommercant() {\r\n      const respCommercant = await getUsers('commercant')\r\n\r\n      respCommercant?.status\r\n        ? setCommercants([...respCommercant?.data])\r\n        : setErrorCommercants(respCommercant?.error)\r\n    }\r\n    fetchCommercant()\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getRestaurants(id)\r\n\r\n        if (resp?.status) {\r\n          setValue('name', resp?.data.name)\r\n          setValue('description', resp?.data.description)\r\n          setValue('user', resp?.data.user._id)\r\n        } else {\r\n          setMessage(resp?.error)\r\n        }\r\n      }\r\n\r\n      fetch()\r\n    }\r\n  }, [id, setValue])\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false)\r\n      setError(false)\r\n      resp = await addRestaurant(data, id)\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n      resetField('name')\r\n      resetField('description')\r\n      resetField('user')\r\n\r\n      setSuccess(true)\r\n    } else {\r\n      setError(true)\r\n      setMessage(resp?.error)\r\n    }\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Authentification />\r\n        {error && <Message> {message}</Message>}\r\n        {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Ajout Restaurant</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRH\"\r\n                    >\r\n                      Ajout image\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRH\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                      onChange={handleFileSelect}\r\n                    />\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm\r\n                className={`row g-3 needs-validation ${\r\n                  isValid && 'was-validated'\r\n                }`}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n              >\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    required\r\n                    {...register('name')}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"description\">Description</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    required\r\n                    {...register('description')}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.description?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"user\">Commercant</CFormLabel>\r\n                  {errorCommercants ? (\r\n                    <Message> {errorCommercants}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <CFormSelect id=\"user\" required {...register('user')}>\r\n                        <option disabled>Choose...</option>\r\n                        {commercants.length &&\r\n                          commercants.map((c) => (\r\n                            <option key={c._id} value={c._id}>\r\n                              {c.firstName} {c.lastName}\r\n                            </option>\r\n                          ))}\r\n                      </CFormSelect>\r\n                      <CFormFeedback invalid>\r\n                        {errors.user?.message}\r\n                      </CFormFeedback>\r\n                    </>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={isSubmitting ? 'disabled' : ' '}\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal size=\"lg\" visible={visible} onClose={() => setVisible(false)}>\r\n        <CModalHeader onClose={() => setVisible(false)}>\r\n          <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"primary\">Save changes</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AjoutRestaurant\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addRestaurant = async (restaurant, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/restaurants/${id}`, restaurant, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/restaurants`, restaurant, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}