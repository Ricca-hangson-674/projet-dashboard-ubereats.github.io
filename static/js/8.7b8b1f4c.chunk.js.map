{"version":3,"sources":["components/Loader.js","components/Message.js","configs/variable.js","provider/userFetch.js","views/clients/Clients.js"],"names":["Loader","color","className","Message","variant","children","defaultProps","variable","env","endpointLocal","endpointProd","getUsers","a","type","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","id","delete","Clients","useState","users","setUsers","setError","useEffect","resp","console","log","fetch","deleteFunction","old","filter","u","_id","xs","scope","length","map","user","firstName","lastName","email","onClick"],"mappings":"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","file":"static/js/8.7b8b1f4c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","export const variable = {\r\n    env: 'prod',\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = type ? `${endpoint}/api/users?type=${type}` : `${endpoint}/api/users`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getUsers, deleteUser } from \"../../provider/userFetch\";\r\n\r\nconst Clients = () => {\r\n  /** State */\r\n  const [users, setUsers] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getUsers('client');\r\n\r\n      resp?.status ? setUsers([...resp?.data]) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const deleteFunction = async (id) => {\r\n\r\n    const resp = await deleteUser(id);\r\n\r\n    if (resp.status) {\r\n      setUsers(old => old.filter(u => u._id !== id))\r\n    }\r\n  }\r\n\r\n  if (users === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>Listes des Clients</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">FirstName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">LastName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {users.length > 0 ? (\r\n                  users.map((user) => (\r\n                    <CTableRow key={user._id}>\r\n                      <CTableDataCell>{user.firstName}</CTableDataCell>\r\n                      <CTableDataCell>{user.lastName}</CTableDataCell>\r\n                      <CTableDataCell>{user.email}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton color={\"primary\"} className=\"me-1\">\r\n                          {\" \"}\r\n                          Voir{\" \"}\r\n                        </CButton>\r\n                        <CButton color={\"secondary\"} className=\"me-1\">\r\n                          {\" \"}\r\n                          Editer{\" \"}\r\n                        </CButton>\r\n                        <CButton color={\"danger\"} onClick={() => deleteFunction(user._id)}> Supprimer </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{\"NO Items\"}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n"],"sourceRoot":""}