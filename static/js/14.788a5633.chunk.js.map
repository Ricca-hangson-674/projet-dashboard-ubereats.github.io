{"version":3,"sources":["views/restaurants/DetailRestaurant.js","configs/variable.js","components/Message.js","components/Loader.js","provider/restaurantFetch.js","provider/foodFetch.js"],"names":["DetailRestaurant","id","useParams","history","useHistory","useState","restaurant","setRestaurant","error","setError","useEffect","a","getRestaurants","resp","status","data","console","log","fetch","deleteFunction","deleteRestaurant","push","deleteItem","foodId","deletefood","xs","className","sm","color","onClick","_id","name","description","user","firstName","lastName","createdAt","categories","map","c","categoryId","restaurantId","foods","f","md","descrption","priceDrop","as","price","isPopular","available","optionLists","o","optionListId","alt","src","rounded","height","width","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","config","headers","endpoint","url","axios","get","message","response","delete","addRestaurant","reponse","put","post","getFoods","addFood","food"],"mappings":"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","file":"static/js/14.788a5633.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardTitle,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCardText,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableRow,\r\n  CButtonGroup,\r\n  CButton,\r\n  CCardFooter,\r\n  // CListGroup,\r\n  // CListGroupItem\r\n} from '@coreui/react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport {\r\n  getRestaurants,\r\n  deleteRestaurant,\r\n} from '../../provider/restaurantFetch'\r\n\r\nimport { deletefood } from '../../provider/foodFetch'\r\n\r\nconst DetailRestaurant = () => {\r\n  /**Params Route */\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n\r\n  /** State */\r\n  const [restaurant, setRestaurant] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetch() {\r\n      const resp = await getRestaurants(id)\r\n\r\n      resp?.status ? setRestaurant(resp?.data) : setError(resp?.error)\r\n    }\r\n\r\n    fetch()\r\n  }, [id])\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteRestaurant(id)\r\n\r\n    if (resp.status) {\r\n      history.push(`/restaurants`)\r\n    }\r\n  }\r\n\r\n  const addItem = (foodId, restaurantId) => {\r\n    history.push(`/ajout-food/${foodId}?restaurant=${restaurantId}`)\r\n  }\r\n\r\n  const editCategory = (categoryId, restaurantId) => {\r\n    history.push(`/ajout-categorie/${categoryId}?restaurant=${restaurantId}`)\r\n  }\r\n\r\n  const listOptionList = (optionListId, restaurantId) => {\r\n    history.push(`/option-list/${optionListId}?restaurant=${restaurantId}`)\r\n  }\r\n\r\n  const deleteItem = async (foodId) => {\r\n    const resp = await deletefood(foodId)\r\n\r\n    if (resp.status) {\r\n      history.push(`/restaurants`)\r\n    }\r\n  }\r\n\r\n  if (restaurant === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>\r\n  }\r\n  return (\r\n    <>\r\n      <Authentification />\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>restaurant {id}</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-danger\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => deleteFunction(restaurant?._id)}\r\n                    >\r\n                      Suppprimer\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableBody>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Name</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.name}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Description</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.description}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Commercant</CTableDataCell>\r\n                    <CTableDataCell>\r\n                      {restaurant.user.firstName} {restaurant.user.lastName}\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Creation</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.createdAt}</CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      {restaurant?.categories.map((c) => (\r\n        <div key={c._id} id={c.name} className=\"container my-4\">\r\n          <CRow>\r\n            <CCol xs={6} className=\"justify-content-start\">\r\n              <h2> {c.name} </h2>\r\n              <CButton\r\n                color={'primary'}\r\n                className=\"me-1\"\r\n                onClick={() => editCategory(c._id, restaurant._id)}\r\n              >\r\n                {' '}\r\n                Editer Categorie{' '}\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            {c?.foods.map((f) => (\r\n              <CCol key={f._id} md={6} xs={12} className={`my-1`}>\r\n                <CCard className=\"hover\">\r\n                  <CCardBody>\r\n                    <CRow>\r\n                      <CCol md={6}>\r\n                        <CCardTitle>{f.name}</CCardTitle>\r\n                        <CCardText>{f.descrption}</CCardText>\r\n\r\n                        {f.priceDrop ? (\r\n                          <>\r\n                            <s>\r\n                              <CCardText as=\"h5\">${f.price}</CCardText>\r\n                            </s>\r\n                            <CCardText as=\"h3\">${f.priceDrop}</CCardText>\r\n                          </>\r\n                        ) : (\r\n                          <CCardText as=\"h3\">${f.price}</CCardText>\r\n                        )}\r\n                        <CCardText as=\"h3\">\r\n                          {f.isPopular && 'Popular'}\r\n                        </CCardText>\r\n                        <CCardText as=\"h3\">\r\n                          {f.available && 'Available'}\r\n                        </CCardText>\r\n\r\n                        {f?.optionLists.map((o) => (\r\n                          <div key={o._id}>\r\n                            <CCardTitle>{o.name}</CCardTitle>\r\n                            <CButton\r\n                              color={'secondary'}\r\n                              className=\"me-1\"\r\n                              onClick={() =>\r\n                                listOptionList(o._id, restaurant._id)\r\n                              }\r\n                            >\r\n                              {' '}\r\n                              Liste Options{' '}\r\n                            </CButton>\r\n                          </div>\r\n                        ))}\r\n                      </CCol>\r\n                      <CCol xs={6}>\r\n                        <img\r\n                          alt={`${f.name}`}\r\n                          src=\"img/mcDo_1.PNG\"\r\n                          rounded=\"true\"\r\n                          height={150}\r\n                          width={150}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCardBody>\r\n                  <CCardFooter>\r\n                    <CButton\r\n                      color={'primary'}\r\n                      className=\"me-1\"\r\n                      onClick={() => addItem(f._id, restaurant._id)}\r\n                    >\r\n                      {' '}\r\n                      Editer Items{' '}\r\n                    </CButton>\r\n                    <CButton\r\n                      color={'danger'}\r\n                      className=\"me-1\"\r\n                      onClick={() => deleteItem(f._id)}\r\n                    >\r\n                      {' '}\r\n                      Supprimer{' '}\r\n                    </CButton>\r\n                  </CCardFooter>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetailRestaurant\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addRestaurant = async (restaurant, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/restaurants/${id}`, restaurant, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/restaurants`, restaurant, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}