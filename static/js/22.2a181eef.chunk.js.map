{"version":3,"sources":["configs/variable.js","components/Message.js","provider/foodFetch.js","views/foods/AjoutFood.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","getFoods","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","addFood","food","reponse","put","post","schemaUser","yup","shape","name","required","description","price","priceDrop","category","optionLists","isPopular","available","promotion","AjoutFood","useState","setMessage","success","setSuccess","setError","history","useHistory","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurant","has","console","log","useForm","resolver","yupResolver","mode","defaultValues","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","useEffect","fetch","resp","onSubmit","xs","className","sm","onClick","push","md","htmlFor","type","invalid","label","disabled","value","to","size","multiple"],"mappings":"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","file":"static/js/22.2a181eef.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod',\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSwitch,\r\n  CFormSelect,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getFoods, addFood } from \"../../provider/foodFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  description: yup.string().required(\"description is required\"),\r\n  price: yup.number().required(\"price are required\"),\r\n  priceDrop: yup.number(),\r\n  category: yup.string().required(\"category are required\"),\r\n  optionLists: yup.array().required(\"optionLists are required\"),\r\n  isPopular: yup.boolean(),\r\n  available: yup.boolean(),\r\n  promotion: yup.boolean(),\r\n  // countInStock: yup.number().required(\"priceDrop are required\"),\r\n});\r\n\r\nconst AjoutFood = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const restaurant = paramsJS.has(\"restaurant\")\r\n    ? paramsJS.get(\"restaurant\")\r\n    : \"restaurant\";\r\n  const category = paramsJS.has(\"category\")\r\n    ? paramsJS.get(\"category\")\r\n    : \"category\";\r\n  const optionLists = paramsJS.has(\"optionLists\")\r\n    ? paramsJS.get(\"optionLists\")\r\n    : [];\r\n\r\n  console.log(\r\n    \"params\",\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\")),\r\n    category,\r\n    optionLists,\r\n    restaurant\r\n  );\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n    defaultValues: { optionLists, category },\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getFoods(null, id);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"description\", resp?.data.description);\r\n          setValue(\"price\", resp?.data.price);\r\n          setValue(\"priceDrop\", resp?.data.priceDrop);\r\n          setValue(\"category\", resp?.data.category);\r\n          setValue(\"optionLists\", resp?.data.optionLists);\r\n          setValue(\"isPopular\", resp?.data.isPopular);\r\n          setValue(\"available\", resp?.data.available);\r\n          setValue(\"promotion\", resp?.data.promotion);\r\n          // setValue(\"countInStock\", resp?.data.countInStock);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [id, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addFood(data, id);\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n\r\n      resetField(\"name\");\r\n      resetField(\"description\");\r\n      resetField(\"price\");\r\n      resetField(\"priceDrop\");\r\n      resetField(\"category\");\r\n      resetField(\"optionLists\");\r\n      resetField(\"isPopular\");\r\n      resetField(\"available\");\r\n      resetField(\"promotion\");\r\n      // resetField(\"countInStock\");\r\n\r\n      setSuccess(true);\r\n    } else {\r\n      setError(true);\r\n      setMessage(resp?.error);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`);\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Food</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  required\r\n                  {...register(\"description\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.description?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  required\r\n                  {...register(\"price\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"priceDrop\">PriceDrop</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"priceDrop\"\r\n                  required\r\n                  {...register(\"priceDrop\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.priceDrop?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"isPopular\"\r\n                  id=\"isPopular\"\r\n                  {...register(\"isPopular\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"available\"\r\n                  id=\"available\"\r\n                  {...register(\"available\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"promotion\"\r\n                  id=\"promotion\"\r\n                  {...register(\"promotion\")}\r\n                />\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"categorie\">Categorie</CFormLabel>\r\n                <CFormSelect aria-label=\"Categorie\" id=\"categorie\">\r\n                  <option disabled>...</option>\r\n                  <option value=\"1\">One</option>\r\n                  <option value=\"2\">Two</option>\r\n                  <option value=\"3\">Three</option>\r\n                </CFormSelect>\r\n                <small className=\"form-text text-muted\">\r\n                  <Link to={`/ajout-categorie?restaurant=${restaurant}`}>\r\n                    Ajouter une categorie\r\n                  </Link>{\" \"}\r\n                </small>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"optionLists\">Option Liste</CFormLabel>\r\n                <CFormSelect\r\n                  size=\"lg\"\r\n                  multiple\r\n                  aria-label=\"Option Liste\"\r\n                  id=\"optionLists\"\r\n                >\r\n                  <option value=\"1\">One</option>\r\n                  <option value=\"2\">Two</option>\r\n                  <option value=\"3\">Three</option>\r\n                </CFormSelect>\r\n                <small className=\"form-text text-muted\">\r\n                  <Link\r\n                    to={`/ajout-optionList?foods=${`foods`}&options=${`options`}`}\r\n                  >\r\n                    Ajouter un option Liste\r\n                  </Link>{\" \"}\r\n                </small>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutFood;\r\n"],"sourceRoot":""}