{"version":3,"sources":["configs/variable.js","components/Message.js","provider/discoveryTableFetch.js","views/discoveryTable/AjoutDiscoveryTable.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","getDiscoveryTables","a","idRestaurant","idDiscoveryTable","config","headers","endpoint","url","axios","get","data","status","message","response","error","updateDiscoverytable","body","mode","post","put","console","log","schemaUser","yup","shape","code","required","AjoutDiscoverytable","useState","setMessage","success","setSuccess","setError","history","useHistory","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","d","has","useForm","resolver","yupResolver","register","handleSubmit","formState","errors","isSubmitting","isValid","setValue","useEffect","fetch","resp","description","onSubmit","tmp","id","xs","classcode","sm","onClick","push","md","htmlFor","type","invalid","className"],"mappings":"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","file":"static/js/28.be0d7f27.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getDiscoveryTables = async (\r\n  idRestaurant = null,\r\n  idDiscoveryTable = null\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const endpoint =\r\n      variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n    const url = idDiscoveryTable\r\n      ? `${endpoint}/api/restaurants/${idRestaurant}/discoverytable?id=${idDiscoveryTable}`\r\n      : `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`\r\n\r\n    const { data } = await axios.get(`${url}`, config)\r\n\r\n    return { status: true, data }\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n\r\n    return { status: false, error: message }\r\n  }\r\n}\r\n\r\nexport const updateDiscoverytable = async (\r\n  idRestaurant,\r\n  body,\r\n  mode = 'post'\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const endpoint =\r\n      variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n    let data = null\r\n\r\n    if (mode === 'post') {\r\n      data = await axios.post(\r\n        `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`,\r\n        body,\r\n        config\r\n      )\r\n    } else if (mode === 'update') {\r\n      data = await axios.put(\r\n        `${endpoint}/api/restaurants/${idRestaurant}/discoverytable`,\r\n        body,\r\n        config\r\n      )\r\n    }\r\n\r\n    console.log('data', data)\r\n\r\n    return { status: true, data }\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n\r\n    return { status: false, error: message }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport {\r\n    getDiscoveryTables,\r\n    updateDiscoverytable,\r\n} from '../../provider/discoveryTableFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  code: yup.string().required(\"code is required\"),\r\n});\r\n\r\nconst AjoutDiscoverytable = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { idRestaurant } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const d = paramsJS.has(\"d\")\r\n    ? paramsJS.get(\"d\")\r\n    : \"discoverytable\";\r\n\r\n  console.log(\r\n    \"params\",\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\")),\r\n    d\r\n  );\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    // resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (d) {\r\n      async function fetch() {\r\n        const resp = await getDiscoveryTables(idRestaurant, d);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"code\", resp?.data.code);\r\n          setValue(\"description\", resp?.data.description);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [d, setValue, idRestaurant]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n\r\n    console.log('onSubmit', data)\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n\r\n      if (d !== 'default') {\r\n        const tmp = {id: d, mode: \"update\"}\r\n        resp = await updateDiscoverytable(idRestaurant, {...data, ...tmp}, 'update');\r\n      } else {\r\n        resp = await updateDiscoverytable(idRestaurant, data);\r\n      }\r\n      \r\n\r\n      if (resp?.status) {\r\n        /** Reset */\r\n        // resetField(\"code\");\r\n        // resetField(\"description\");\r\n\r\n        setSuccess(true);\r\n      } else {\r\n        setError(true);\r\n        setMessage(resp?.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(`/discovery-table/${idRestaurant}`);\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard classcode=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong> { d ? 'Edit' : 'Ajout'} Discoverytable</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup classcode=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    classcode=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              classcode={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"code\">code</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"code\"\r\n                  required\r\n                  {...register(\"code\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.code?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`mt-2 ${isSubmitting ? \"disabled\" : \" \"}`}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutDiscoverytable;\r\n"],"sourceRoot":""}