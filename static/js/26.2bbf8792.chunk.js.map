{"version":3,"sources":["configs/variable.js","components/Message.js","provider/userFetch.js","provider/restaurantFetch.js","views/restaurants/AjoutRestaurant.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","getUsers","a","type","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","delete","registerUser","user","reponse","put","post","authentification","getRestaurants","deleteRestaurant","addRestaurant","restaurant","schemaUser","yup","shape","name","required","description","AjoutRestaurant","useState","setMessage","success","setSuccess","setError","commercants","setCommercants","errorCommercants","setErrorCommercants","visible","setVisible","handleFileSelect","e","history","useHistory","useParams","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","useEffect","respCommercant","console","log","fetchCommercant","fetch","resp","_id","onSubmit","xs","className","sm","onClick","push","htmlFor","style","display","onChange","md","invalid","disabled","length","map","c","value","firstName","lastName","size","onClose"],"mappings":"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","file":"static/js/26.2bbf8792.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addRestaurant = async (restaurant, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/restaurants/${id}`, restaurant, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/restaurants`, restaurant, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Message from '../../components/Message'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { addRestaurant, getRestaurants } from '../../provider/restaurantFetch'\r\nimport { getUsers } from '../../provider/userFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required('name is required'),\r\n  description: yup.string().required('description is required'),\r\n  user: yup.string().required('user is required'),\r\n})\r\n\r\nconst AjoutRestaurant = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [commercants, setCommercants] = useState([])\r\n  const [errorCommercants, setErrorCommercants] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  /** Image */\r\n\r\n  const handleFileSelect = async (e) => {\r\n    setVisible(true)\r\n  }\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { id } = useParams()\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: 'onTouched',\r\n  })\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetchCommercant() {\r\n      const respCommercant = await getUsers('commercant')\r\n\r\n      respCommercant?.status\r\n        ? setCommercants([...respCommercant?.data])\r\n        : setErrorCommercants(respCommercant?.error)\r\n    }\r\n    fetchCommercant()\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getRestaurants(id)\r\n\r\n        if (resp?.status) {\r\n          setValue('name', resp?.data.name)\r\n          setValue('description', resp?.data.description)\r\n          setValue('user', resp?.data.user._id)\r\n        } else {\r\n          setMessage(resp?.error)\r\n        }\r\n      }\r\n\r\n      fetch()\r\n    }\r\n  }, [id, setValue])\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false)\r\n      setError(false)\r\n      resp = await addRestaurant(data, id)\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n      resetField('name')\r\n      resetField('description')\r\n      resetField('user')\r\n\r\n      setSuccess(true)\r\n    } else {\r\n      setError(true)\r\n      setMessage(resp?.error)\r\n    }\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Authentification />\r\n        {error && <Message> {message}</Message>}\r\n        {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Ajout Restaurant</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRH\"\r\n                    >\r\n                      Ajout image\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRH\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                      onChange={handleFileSelect}\r\n                    />\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm\r\n                className={`row g-3 needs-validation ${\r\n                  isValid && 'was-validated'\r\n                }`}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n              >\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    required\r\n                    {...register('name')}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"description\">Description</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    required\r\n                    {...register('description')}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.description?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"user\">Commercant</CFormLabel>\r\n                  {errorCommercants ? (\r\n                    <Message> {errorCommercants}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <CFormSelect id=\"user\" required {...register('user')}>\r\n                        <option disabled>Choose...</option>\r\n                        {commercants.length &&\r\n                          commercants.map((c) => (\r\n                            <option key={c._id} value={c._id}>\r\n                              {c.firstName} {c.lastName}\r\n                            </option>\r\n                          ))}\r\n                      </CFormSelect>\r\n                      <CFormFeedback invalid>\r\n                        {errors.user?.message}\r\n                      </CFormFeedback>\r\n                    </>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={isSubmitting ? 'disabled' : ' '}\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal size=\"lg\" visible={visible} onClose={() => setVisible(false)}>\r\n        <CModalHeader onClose={() => setVisible(false)}>\r\n          <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"primary\">Save changes</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AjoutRestaurant\r\n"],"sourceRoot":""}