{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","provider/restaurantFetch.js","provider/foodFetch.js","views/restaurants/DetailRestaurant.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","Loader","className","getRestaurants","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteRestaurant","delete","addRestaurant","restaurant","reponse","put","post","getFoods","deletefood","addFood","food","DetailRestaurant","useParams","history","useHistory","useState","setRestaurant","setError","useEffect","resp","console","log","fetch","deleteFunction","push","deleteItem","foodId","xs","sm","onClick","_id","name","description","user","firstName","lastName","createdAt","categories","map","c","foods","f","md","descrption","priceDrop","as","price","isPopular","available","alt","src","rounded","height","width","restaurantId"],"mappings":"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","file":"static/js/12.a05d1fe1.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addRestaurant = async (restaurant, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/restaurants/${id}`, restaurant, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/restaurants`, restaurant, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardTitle,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCardText,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableRow,\r\n  CButtonGroup,\r\n  CButton,\r\n  CCardFooter,\r\n  // CListGroup,\r\n  // CListGroupItem\r\n} from \"@coreui/react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport {\r\n  getRestaurants,\r\n  deleteRestaurant,\r\n} from \"../../provider/restaurantFetch\";\r\n\r\nimport {\r\n  deletefood\r\n} from \"../../provider/foodFetch\";\r\n\r\nconst DetailRestaurant = () => {\r\n  /**Params Route */\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  /** State */\r\n  const [restaurant, setRestaurant] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getRestaurants(id);\r\n\r\n      resp?.status ? setRestaurant(resp?.data) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, [id]);\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`);\r\n  };\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteRestaurant(id);\r\n\r\n    if (resp.status) {\r\n      history.push(`/restaurants`);\r\n    }\r\n  };\r\n\r\n  const addItem = (foodId, restaurantId) => {\r\n    history.push(`/ajout-food/${foodId}?restaurant=${restaurantId}`);\r\n  };\r\n\r\n  const deleteItem = async (foodId) => {\r\n    const resp = await deletefood(foodId);\r\n\r\n    if (resp.status) {\r\n      history.push(`/restaurants`);\r\n    }\r\n  };\r\n\r\n  if (restaurant === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n  return (\r\n    <>\r\n      <Authentification />\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>restaurant {id}</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-danger\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => deleteFunction(restaurant?._id)}\r\n                    >\r\n                      Suppprimer\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableBody>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Name</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.name}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Description</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.description}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Commercant</CTableDataCell>\r\n                    <CTableDataCell>\r\n                      {restaurant.user.firstName} {restaurant.user.lastName}\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Creation</CTableDataCell>\r\n                    <CTableDataCell>{restaurant.createdAt}</CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      {restaurant?.categories.map((c) => (\r\n        <div key={c._id} id={c.name} className=\"container my-4\">\r\n          <h2> {c.name} </h2>\r\n          <CRow>\r\n            {c?.foods.map((f) => (\r\n              <CCol key={f._id} md={6} xs={12} className={`my-1`}>\r\n                <CCard className=\"hover\">\r\n                  <CCardBody>\r\n                    <CRow>\r\n                      <CCol md={6}>\r\n                        <CCardTitle>{f.name}</CCardTitle>\r\n                        <CCardText>{f.descrption}</CCardText>\r\n\r\n                        {f.priceDrop ? (\r\n                          <>\r\n                            <s>\r\n                              <CCardText as=\"h5\">${f.price}</CCardText>\r\n                            </s>\r\n                            <CCardText as=\"h3\">${f.priceDrop}</CCardText>\r\n                          </>\r\n                        ) : (\r\n                          <CCardText as=\"h3\">${f.price}</CCardText>\r\n                        )}\r\n                        <CCardText as=\"h3\">\r\n                          {f.isPopular && \"Popular\"}\r\n                        </CCardText>\r\n                        <CCardText as=\"h3\">\r\n                          {f.available && \"Available\"}\r\n                        </CCardText>\r\n\r\n                        {/* {f?.optionLists.map((o) => (\r\n                          <div key={o._id}>\r\n                            <CCardTitle>{o.name}</CCardTitle>\r\n                            <CCardText>{o.type}</CCardText>\r\n                            <CListGroup variant=\"flush\">\r\n                              {o?.options.map((opt) => (\r\n                                <CListGroupItem key={opt._id}>\r\n                                  {opt.name} - ${\" \"}\r\n                                  {opt.priceDrop ? opt.priceDrop : opt.price}\r\n                                </CListGroupItem>\r\n                              ))}\r\n                            </CListGroup>\r\n                          </div>\r\n                        ))} */}\r\n                      </CCol>\r\n                      <CCol xs={6}>\r\n                        <img\r\n                          alt={`${f.name}`}\r\n                          src=\"img/mcDo_1.PNG\"\r\n                          rounded\r\n                          height={150}\r\n                          width={150}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCardBody>\r\n                  <CCardFooter>\r\n                        <CButton\r\n                          color={\"primary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => addItem(f._id, restaurant._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Editer Items{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"danger\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => deleteItem(f._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Supprimer{\" \"}\r\n                        </CButton>\r\n                  </CCardFooter>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailRestaurant;\r\n"],"sourceRoot":""}