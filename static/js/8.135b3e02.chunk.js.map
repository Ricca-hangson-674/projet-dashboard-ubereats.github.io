{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","provider/foodFetch.js","provider/categorieFetch.js","provider/optionListFetch.js","views/foods/AjoutFood.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","Loader","className","getFoods","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deletefood","delete","addFood","food","reponse","put","post","getCategories","addCategorie","categorie","getOptionLists","addOptionList","optionList","schemaUser","yup","shape","name","required","description","price","typeError","category","optionLists","isPopular","available","promotion","AjoutFood","useState","setMessage","success","setSuccess","setError","categories","setCategories","setOptionLists","history","useHistory","foodId","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurantParam","has","categoryParam","optionListsParam","console","log","useForm","resolver","yupResolver","mode","defaultValues","priceDrop","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","control","useEffect","resp","resp1","map","o","value","_id","label","fetch","length","optionListTMP","onSubmit","body","restaurant","optionListFor","foods","xs","sm","onClick","push","noValidate","md","htmlFor","type","invalid","defaultValue","c","to","render","field","onChange","onBlur","isMulti","options","style","display"],"mappings":"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","file":"static/js/8.135b3e02.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptionLists = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/optionLists/${id}` : `${endpoint}/api/optionLists`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOptionList = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/optionLists/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOptionList = async (optionList, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/optionLists/${id}`, optionList, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/optionLists`, optionList, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSwitch,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\n\r\nimport Select from 'react-select'\r\n\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\n\r\nimport { getFoods, addFood } from '../../provider/foodFetch'\r\nimport { getOptionLists, addOptionList } from '../../provider/optionListFetch'\r\nimport { getCategories, addCategorie } from '../../provider/categorieFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required('name is required'),\r\n  description: yup.string().required('description is required'),\r\n  price: yup\r\n    .number()\r\n    .typeError('price must be a `number` type')\r\n    .required('price are required'),\r\n  // priceDrop: yup.number(),\r\n  // priceDrop: yup.nullable(),\r\n  category: yup.string().required('categorie are required'),\r\n  optionLists: yup.array(),\r\n  isPopular: yup.boolean(),\r\n  available: yup.boolean(),\r\n  promotion: yup.boolean(),\r\n  // countInStock: yup.number().required(\"priceDrop are required\"),\r\n})\r\n\r\nconst AjoutFood = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [categories, setCategories] = useState(null)\r\n  const [optionLists, setOptionLists] = useState(null)\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { id: foodId } = useParams()\r\n  const paramQuery = window.location.hash\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf('?'))\r\n  )\r\n  const restaurantParam = paramsJS.has('restaurant')\r\n    ? paramsJS.get('restaurant')\r\n    : 'restaurant'\r\n  const categoryParam = paramsJS.has('category')\r\n    ? paramsJS.get('category')\r\n    : 'category'\r\n  const optionListsParam = paramsJS.has('optionLists')\r\n    ? paramsJS.get('optionLists')\r\n    : []\r\n\r\n  console.log(\r\n    'params',\r\n    paramQuery.substring(paramQuery.lastIndexOf('?')),\r\n    categoryParam,\r\n    optionListsParam,\r\n    restaurantParam\r\n  )\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n    // getValues,\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: 'onTouched',\r\n    defaultValues: { priceDrop: 0 },\r\n  })\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts ')\r\n\r\n    async function fetch() {\r\n      const resp = await getOptionLists(null, null)\r\n\r\n      const resp1 = await getCategories(null, null)\r\n\r\n      if (resp?.status) {\r\n        setOptionLists([\r\n          ...resp.data.map((o) => {\r\n            return { value: o._id, label: o.name }\r\n          }),\r\n        ])\r\n      } else {\r\n        setMessage(resp?.error)\r\n      }\r\n\r\n      if (resp1?.status) {\r\n        setCategories([...resp1.data])\r\n      } else {\r\n        setMessage(resp1?.error)\r\n      }\r\n    }\r\n\r\n    fetch()\r\n  }, [])\r\n\r\n  /** Dependency */\r\n  useEffect(() => {\r\n    console.log('useEffect, Dependency')\r\n\r\n    if (foodId) {\r\n      async function fetch() {\r\n        const resp = await getFoods(foodId)\r\n\r\n        console.log('resp', resp)\r\n\r\n        if (resp?.status) {\r\n          setValue('name', resp?.data.name)\r\n          setValue('description', resp?.data.description)\r\n          setValue('price', resp?.data.price)\r\n          setValue('priceDrop', resp?.data.priceDrop)\r\n          setValue('category', resp?.data.category._id)\r\n          setValue('isPopular', resp?.data.isPopular)\r\n          setValue('available', resp?.data.available)\r\n          setValue('promotion', resp?.data.promotion)\r\n          // setValue(\"countInStock\", resp?.data.countInStock);\r\n\r\n          if (resp?.data.optionLists) {\r\n            if (resp?.data.optionLists.length) {\r\n              /** optionLists */\r\n              const optionListTMP = resp?.data.optionLists.map((o) => {\r\n                return { value: o._id, label: o.name }\r\n              })\r\n              setValue('optionLists', optionListTMP)\r\n            }\r\n          }\r\n        } else {\r\n          setMessage(resp?.error)\r\n        }\r\n      }\r\n\r\n      fetch()\r\n    }\r\n  }, [foodId, setValue])\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null\r\n    let body = null\r\n\r\n    if (data?.optionLists) {\r\n      if (data?.optionLists?.length)\r\n        body = { ...data, optionLists: data.optionLists.map((o) => o.value) }\r\n    } else {\r\n      console.log('body', body)\r\n      body = { ...data }\r\n    }\r\n\r\n    console.log('onSubmit', data, body)\r\n    // console.log(\"isValid\", isValid);\r\n\r\n    if (isValid && body) {\r\n      /** reste */\r\n      setSuccess(false)\r\n      setError(false)\r\n      resp = await addFood(body, foodId)\r\n    }\r\n\r\n    if (resp?.status) {\r\n\r\n      if (!foodId) {\r\n        /** Reset */\r\n        resetField('name')\r\n        resetField('description')\r\n        resetField('price')\r\n        resetField('priceDrop')\r\n        resetField('category')\r\n        resetField('optionLists')\r\n        resetField('isPopular')\r\n        resetField('available')\r\n        resetField('promotion')\r\n        // resetField(\"countInStock\");\r\n      }\r\n      \r\n\r\n      if (body.category) {\r\n        if (restaurantParam)\r\n          await addCategorie({ restaurant: restaurantParam }, body.category)\r\n      }\r\n\r\n      if (body.optionLists) {\r\n        if (body.optionLists.length) {\r\n          for (const optionListFor of body.optionLists) {\r\n            await addOptionList({ foods: [resp?.data?._id] }, optionListFor)\r\n          }\r\n        }\r\n      }\r\n\r\n      setSuccess(true)\r\n    } else {\r\n      setError(true)\r\n      setMessage(resp?.error)\r\n    }\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  if (categories === null || optionLists === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  console.log('errors', errors)\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Food</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              noValidate\r\n              className={`row g-3`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register('name')}\r\n                  invalid={errors.name ? true : false}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  required\r\n                  {...register('description')}\r\n                  invalid={errors.description ? true : false}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.description?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  required\r\n                  {...register('price')}\r\n                  invalid={errors.price ? true : false}\r\n                />\r\n                <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"priceDrop\">PriceDrop</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"priceDrop\"\r\n                  {...register('priceDrop')}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.priceDrop?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"isPopular\"\r\n                  id=\"isPopular\"\r\n                  {...register('isPopular')}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"available\"\r\n                  id=\"available\"\r\n                  {...register('available')}\r\n                />\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormSwitch\r\n                  label=\"promotion\"\r\n                  id=\"promotion\"\r\n                  {...register('promotion')}\r\n                />\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"categorie\">Categorie</CFormLabel>\r\n                <CFormSelect\r\n                  aria-label=\"Categorie\"\r\n                  id=\"categorie\"\r\n                  required\r\n                  {...register('category')}\r\n                  invalid={errors.category ? true : false}\r\n                  defaultValue={categories[0]?._id && categories[0]?._id}\r\n                >\r\n                  {categories?.length &&\r\n                    categories.map((c) => (\r\n                      <option value={c._id} key={c._id}>\r\n                        {c.name}\r\n                      </option>\r\n                    ))}\r\n                </CFormSelect>\r\n                <CFormFeedback invalid>\r\n                  {errors.category?.message}\r\n                </CFormFeedback>\r\n                <small className=\"form-text text-muted\">\r\n                  <Link to={`/ajout-categorie?restaurant=${restaurantParam}`}>\r\n                    Ajouter une categorie\r\n                  </Link>{' '}\r\n                </small>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"optionLists\">Option Liste</CFormLabel>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"optionLists\"\r\n                  render={({\r\n                    field: { onChange, onBlur, value, name },\r\n                    // field,\r\n                    // fieldState: { error },\r\n                  }) => (\r\n                    <>\r\n                      <Select\r\n                        defaultValue={value}\r\n                        value={value}\r\n                        name={name}\r\n                        onBlur={onBlur}\r\n                        onChange={onChange}\r\n                        // {...field}\r\n                        isMulti\r\n                        options={optionLists}\r\n                      />\r\n                      <small className=\"form-text text-muted\">\r\n                        <Link\r\n                          to={`/ajout-optionList?foods=${`foods`}&options=${`options`}`}\r\n                        >\r\n                          Ajouter un option Liste\r\n                        </Link>{' '}\r\n                      </small>\r\n                      {errors.optionLists?.message && (\r\n                        <div\r\n                          style={{ display: 'block' }}\r\n                          className=\"invalid-feedback\"\r\n                        >\r\n                          {errors.optionLists?.message}\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                />\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? 'disabled' : ' '}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\nexport default AjoutFood\r\n"],"sourceRoot":""}