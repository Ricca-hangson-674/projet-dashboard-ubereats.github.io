{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","provider/dashboardFetch.js","views/historiques/Historiques.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","Loader","className","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","getDashboard","a","config","headers","endpoint","url","axios","get","data","status","message","response","error","getChiffreAffaires","body","post","Historiques","useState","chiffreAffaires","setChiffreAffaires","setData","setError","type","setType","setStatus","useEffect","resp_1","console","log","fetch","dataTMP","dataGlobal","ordersChiffresGroupedByDayStatus","ordersChiffresGroupedByMonthWithStatus","ordersChiffresGroupedByYearWithStatus","order","updatedAt","moment","format","toggleType","key","xs","sm","onChange","target","map","onClick","active","scope","d","index","total","toLocaleString"],"mappings":"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","file":"static/js/13.e57c00c4.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getDashboard = async () => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = `${endpoint}/api/dashboard`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const getOrders = async (body) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = `${endpoint}/api/dashboard/orders`\r\n\r\n        const { data } = await axios.post(`${url}`, body, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const getChiffreAffaires = async (body) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = `${endpoint}/api/dashboard/chiffres-affaires`\r\n\r\n        const { data } = await axios.post(`${url}`, body, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n  CButtonGroup,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\n\r\n\r\nimport moment from 'moment'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport {\r\n  // getOrders,\r\n  getChiffreAffaires,\r\n  // getDashboard,\r\n} from '../../provider/dashboardFetch'\r\n\r\nconst Historiques = () => {\r\n  /** State */\r\n  const [chiffreAffaires, setChiffreAffaires] = useState(null)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [type, setType] = useState('Day')\r\n  const [status, setStatus] = useState('READING')\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetch() {\r\n      const resp_1 = await getChiffreAffaires()\r\n\r\n      resp_1?.status\r\n        ? setChiffreAffaires({ ...resp_1?.data })\r\n        : setError(resp_1?.error)\r\n    }\r\n\r\n    fetch()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('Dependency')\r\n    let dataTMP = []\r\n    let dataGlobal = []\r\n\r\n    if (type === 'Day') {\r\n      if (chiffreAffaires?.ordersChiffresGroupedByDayStatus?.length)\r\n        dataGlobal = [...chiffreAffaires?.ordersChiffresGroupedByDayStatus]\r\n    } else if (type === 'Month') {\r\n      if (chiffreAffaires?.ordersChiffresGroupedByMonthWithStatus?.length)\r\n        dataGlobal = [\r\n          ...chiffreAffaires?.ordersChiffresGroupedByMonthWithStatus,\r\n        ]\r\n    } else if (type === 'Year') {\r\n      if (chiffreAffaires?.ordersChiffresGroupedByYearWithStatus?.length)\r\n        dataGlobal = [...chiffreAffaires?.ordersChiffresGroupedByYearWithStatus]\r\n    }\r\n\r\n    if (dataGlobal?.length) {\r\n      for (const order of dataGlobal) {\r\n        if (status === order.status) {\r\n          if (type === 'Day') {\r\n            dataTMP = [...dataTMP, {...order, updatedAt: moment(order.updatedAt).format('DD/MM/YYYY')}]\r\n          } else if (type === 'Month') {\r\n            dataTMP = [...dataTMP, {...order, updatedAt: moment(order.updatedAt).format('MM/YYYY')}]\r\n          } else if (type === 'Year') {\r\n            dataTMP = [...dataTMP, {...order, updatedAt: moment(order.updatedAt).format('YYYY')}]\r\n          }\r\n        }\r\n      }\r\n\r\n      setData([...dataTMP])\r\n    }\r\n  }, [status, type, chiffreAffaires])\r\n\r\n  const toggleType = (value, key) => {\r\n    if (key === 'status') setStatus(value)\r\n    else if (key === 'type') setType(value)\r\n  }\r\n\r\n  if (chiffreAffaires === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Listes des Historiques</strong>\r\n              </CCol>\r\n              <CCol sm={7} className=\"d-none d-md-block\">\r\n                <CFormSelect\r\n                  value={status}\r\n                  aria-label=\"Status\"\r\n                  className=\"float-end mb-1\"\r\n                  onChange={(e) => {\r\n                    toggleType(e.target.value, 'status')\r\n                  }}\r\n                >\r\n                  {[\r\n                    'ORDER_STATUS_UNSPECIFIED',\r\n                    'CONFIRMED',\r\n                    'PENDING',\r\n                    'PENDING_MERCHANT_CONFIRMATION',\r\n                    'CANCELED',\r\n                    'FAILED',\r\n                    'DECLINED_BY_MERCHANT',\r\n                    'READING',\r\n                  ].map((value) => (\r\n                    <option value={value} key={value}>\r\n                      {value}\r\n                    </option>\r\n                  ))}\r\n                </CFormSelect>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  {['Day', 'Month', 'Year'].map((value) => (\r\n                    <CButton\r\n                      onClick={() => toggleType(value, 'type')}\r\n                      color=\"outline-secondary\"\r\n                      key={value}\r\n                      className=\"mx-0\"\r\n                      active={value === type}\r\n                    >\r\n                      {value}\r\n                    </CButton>\r\n                  ))}\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {data && data.length > 0 ? (\r\n                  data.map((d, index) => (\r\n                    <CTableRow key={index}>\r\n                      <CTableDataCell>{d.total.toLocaleString(\"fr-FR\")} $</CTableDataCell>\r\n                      <CTableDataCell>{d.status}</CTableDataCell>\r\n                      <CTableDataCell>{ d.updatedAt}</CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{'NO Items'}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Historiques\r\n"],"sourceRoot":""}