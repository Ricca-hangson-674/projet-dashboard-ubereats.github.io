{"version":3,"sources":["configs/variable.js","components/Message.js","provider/categorieFetch.js","views/categories/AjoutCategorie.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","getCategories","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","addCategorie","categorie","reponse","put","post","schemaUser","yup","shape","name","required","description","restaurant","AjoutCategorie","useState","setMessage","success","setSuccess","setError","category","setCategory","history","useHistory","idCategory","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","has","console","log","useForm","resolver","yupResolver","mode","defaultValues","register","handleSubmit","formState","errors","isSubmitting","isValid","setValue","useEffect","fetch","resp","_id","onSubmit","xs","className","sm","onClick","push","md","htmlFor","type","invalid"],"mappings":"iJAAA,kCAAO,IAAMA,EAAW,CACpBC,IAAK,OACLC,cAAe,wBACfC,aAAa,wCACbC,cAAc,0B,iCCJlB,uBAGMC,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACvB,OAAO,cAAC,IAAD,CAAQC,MAAOF,EAAf,SACDC,KAIVF,EAAQI,aAAe,CACnBH,QAAS,QAGED,O,+JCVFK,EAAa,uCAAG,oDAAAC,EAAA,6DAAOC,EAAP,+BAAY,KAAZ,SAGfC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBf,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAExEa,EAAOJ,EAAE,UAAMG,EAAN,2BAAiCH,GAAjC,UAA2CG,EAA3C,mBAXM,SAaEE,IAAMC,IAAN,UAAaF,GAAOH,GAbtB,uBAabM,EAba,EAabA,KAba,kBAed,CAACC,QAAQ,EAAMD,SAfD,yCAiBfE,EAAU,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAC5C,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QAnBK,kBAqBd,CAACD,QAAQ,EAAOG,MAAOF,IArBT,0DAAH,qDAgDbG,EAAY,uCAAG,WAAOC,GAAP,qCAAAd,EAAA,yDAAkBC,EAAlB,+BAAuB,KAAvB,SAGdC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAA4B,UAAjBf,IAASC,IAAkBD,IAASE,cAAgBF,IAASG,aAE1EuB,EAAU,MAEVd,EAbgB,iCAcCK,IAAMU,IAAN,UAAaZ,EAAb,2BAAwCH,GAAMa,EAAWZ,GAd1D,OAchBa,EAdgB,gDAgBCT,IAAMW,KAAN,UAAcb,EAAd,mBAAyCU,EAAWZ,GAhBrD,QAgBhBa,EAhBgB,wCAmBb,CAACN,QAAQ,EAAMD,KAAI,UAAEO,SAAF,aAAE,EAASP,OAnBjB,yCAqBdE,EAAU,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAC5C,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QAvBI,kBAyBb,CAACD,QAAQ,EAAOG,MAAOF,IAzBV,0DAAH,uD,2KCxBnBQ,EAAaC,MAAaC,MAAM,CACpCC,KAAMF,MAAaG,SAAS,oBAC5BC,YAAaJ,MAAaG,SAAS,2BACnCE,WAAYL,QAyKCM,UAtKQ,WAAO,IAAD,IAE3B,EAA8BC,mBAAS,MAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOd,EAAP,KAAckB,EAAd,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAGIC,EAAUC,cACJC,EAAeC,cAAnBnC,GACAoC,EAAaC,OAAOC,SAASC,KAC7BC,EAAW,IAAIC,gBACnBL,EAAWM,UAAUN,EAAWO,YAAY,OAExCpB,EAAaiB,EAASI,IAAI,cAC5BJ,EAASlC,IAAI,cACb,aAEJuC,QAAQC,IACN,SACAV,EAAWM,UAAUN,EAAWO,YAAY,MAC5CpB,GAIF,MAMIwB,YAAQ,CACVC,SAAUC,YAAYhC,GACtBiC,KAAM,YACNC,cAAe,CAAE5B,gBARjB6B,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAAcC,EAHrC,EAGqCA,QAEnCC,EALF,EAKEA,SAQFC,qBAAU,WAGR,GAFAd,QAAQC,IAAI,uCAERZ,EAAY,CAAC,IACA0B,EADD,uCACd,4BAAA7D,EAAA,sEACqBD,YAAcoC,GADnC,QAGE,QAFM2B,EADR,cAGE,IAAIA,OAAJ,EAAIA,EAAMrD,SACRkD,EAAS,OAAD,OAASG,QAAT,IAASA,OAAT,EAASA,EAAMtD,KAAKa,MAC5BsC,EAAS,cAAD,OAAgBG,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMtD,KAAKe,aACnCoC,EAAS,aAAD,OAAeG,QAAf,IAAeA,OAAf,EAAeA,EAAMtD,KAAKgB,WAAWuC,MAE7CpC,EAAU,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAMlD,OARrB,2CADc,qDAadiD,OAED,CAAC1B,EAAYwB,IAEhB,IAAMK,EAAQ,uCAAG,WAAOxD,GAAP,qBAAAR,EAAA,yDACX8D,EAAO,KAEXhB,QAAQC,IAAI,WAAYvC,IAEpBkD,EALW,uBAOb7B,GAAW,GACXC,GAAS,GARI,SASAjB,YAAaL,EAAM2B,GATnB,OASb2B,EATa,QAWb,UAAIA,SAAJ,aAAI,EAAMrD,SAMRuB,EAAW,UAAC8B,SAAD,aAAC,EAAMtD,KAAKuD,KAEvBlC,GAAW,KAEXC,GAAS,GACTH,EAAU,UAACmC,SAAD,aAAC,EAAMlD,QAtBN,2CAAH,sDAsCd,OAFAkC,QAAQC,IAAI,QAASS,GAGnB,eAAC,IAAD,WACE,cAAC,IAAD,IACC5C,GAAS,eAAC,IAAD,eAAWF,KACpBkB,GAAW,eAAC,IAAD,2CACZ,cAAC,IAAD,CAAMqC,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,uDAEF,cAAC,IAAD,CAAMA,GAAI,EAAV,SACE,cAAC,IAAD,CAAcD,UAAU,iBAAxB,SACE,cAAC,IAAD,CACErE,MAAM,oBACNqE,UAAU,OACVE,QAAS,WA3BrB5C,EACFS,EAAQoC,KAAR,6BAAmC7C,IAEnCS,EAAQoC,KAAR,+BAAqCtC,KAqBzB,6BAWR,cAAC,IAAD,UACE,eAAC,IAAD,CACEmC,UAAS,mCACPR,GAAW,iBAEbM,SAAUV,EAAaU,GAJzB,UAME,eAAC,IAAD,CAAMM,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,OAApB,kBACA,cAAC,IAAD,aACEC,KAAK,OACLvE,GAAG,OACHqB,UAAQ,GACJ+B,EAAS,UAEf,cAAC,IAAD,CAAeoB,SAAO,EAAtB,mBAAwBjB,EAAOnC,YAA/B,aAAwB,EAAaX,aAEvC,eAAC,IAAD,CAAM4D,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,WAApB,yBACA,cAAC,IAAD,aACEC,KAAK,OACLvE,GAAG,cACHqB,UAAQ,GACJ+B,EAAS,iBAEf,cAAC,IAAD,CAAeoB,SAAO,EAAtB,mBACGjB,EAAOjC,mBADV,aACG,EAAoBb,aAGzB,cAAC,IAAD,CAAMuD,GAAI,GAAV,SACE,cAAC,IAAD,CACEpE,MAAM,UACN2E,KAAK,SACLN,UAAWT,EAAe,WAAa,IAHzC","file":"static/js/27.9919501a.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getCategories, addCategorie } from \"../../provider/categorieFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  description: yup.string().required(\"description is required\"),\r\n  restaurant: yup.string(),\r\n});\r\n\r\nconst AjoutCategorie = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [category, setCategory] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id: idCategory } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const restaurant = paramsJS.has(\"restaurant\")\r\n    ? paramsJS.get(\"restaurant\")\r\n    : \"restaurant\";\r\n\r\n  console.log(\r\n    \"params\",\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\")),\r\n    restaurant\r\n  );\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    // resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n    defaultValues: { restaurant },\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (idCategory) {\r\n      async function fetch() {\r\n        const resp = await getCategories(idCategory);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"description\", resp?.data.description);\r\n          setValue(\"restaurant\", resp?.data.restaurant._id);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [idCategory, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n\r\n    console.log('onSubmit', data)\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addCategorie(data, idCategory);\r\n\r\n      if (resp?.status) {\r\n        /** Reset */\r\n        // resetField(\"name\");\r\n        // resetField(\"description\");\r\n        // resetField(\"restaurant\");\r\n\r\n        setCategory(resp?.data._id);\r\n\r\n        setSuccess(true);\r\n      } else {\r\n        setError(true);\r\n        setMessage(resp?.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    if (restaurant) {\r\n      history.push(`/detail-restaurant/${restaurant}`);\r\n    } else {\r\n      history.push(`/ajout-food?category=${category}`);\r\n    }\r\n    \r\n  };\r\n\r\n  console.log('erros', errors)\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Categorie</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  required\r\n                  {...register(\"description\")}\r\n                />\r\n                <CFormFeedback invalid>\r\n                  {errors.description?.message}\r\n                </CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutCategorie;\r\n"],"sourceRoot":""}