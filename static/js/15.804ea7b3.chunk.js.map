{"version":3,"sources":["views/optionLists/DetailOptionList.js","configs/variable.js","components/Message.js","components/Loader.js","provider/optionListFetch.js","provider/optionFetch.js"],"names":["DetailOptionList","id","useParams","history","useHistory","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurant","has","get","useState","optionList","setOptionList","error","setError","useEffect","a","getOptionLists","resp","status","data","console","log","fetch","deleteOptionListFunction","idOptionList","deleteOptionList","push","deleteOptionFunction","idOption","deleteOption","optionsTMP","options","filter","u","_id","old","xs","className","sm","color","onClick","name","description","type","scope","length","map","o","price","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","config","headers","endpoint","url","axios","message","response","delete","addOptionList","reponse","put","post","getOptions","addOption","option"],"mappings":"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","file":"static/js/15.804ea7b3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableRow,\r\n  CButtonGroup,\r\n  CButton,\r\n  CTableHead,\r\n  CTableHeaderCell\r\n} from '@coreui/react'\r\n\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport {\r\n    getOptionLists,\r\n    deleteOptionList\r\n} from '../../provider/optionListFetch'\r\n\r\nimport {\r\n  deleteOption\r\n} from '../../provider/optionFetch'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\n\r\nconst DetailOptionList = () => {\r\n\r\n  /**Params Route */\r\n  let { id } = useParams()\r\n  let history = useHistory()\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const restaurant = paramsJS.has(\"restaurant\") ? paramsJS.get(\"restaurant\") : null;\r\n\r\n\r\n  /** State */\r\n  const [optionList, setOptionList] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts')\r\n\r\n    async function fetch() {\r\n      const resp = await getOptionLists(id)\r\n\r\n      resp?.status ? setOptionList(resp?.data) : setError(resp?.error)\r\n    }\r\n\r\n    fetch()\r\n  }, [id])\r\n\r\n  const back = () => {\r\n    history.push(`/detail-restaurant/${restaurant}`)\r\n  }\r\n\r\n  const ajout = () => {\r\n    history.push(`/ajout-optionList`)\r\n  }\r\n\r\n  const editOptionListFunction = (idOptionList) => {\r\n    history.push(`/ajout-optionList/${idOptionList}?restaurant=${restaurant}`)\r\n  }\r\n\r\n  const deleteOptionListFunction = async (idOptionList) => {\r\n    const resp = await deleteOptionList(idOptionList)\r\n\r\n    if (resp.status) {\r\n      history.push(`/detail-restaurant/${restaurant}`)\r\n    }\r\n  }\r\n\r\n  const editOptionFunction = (idOption, idOptionList) => {\r\n    history.push(`/ajout-option/${idOption}?optionList=${idOptionList}`)\r\n  }\r\n\r\n  const deleteOptionFunction = async (idOption) => {\r\n    const resp = await deleteOption(idOption)\r\n\r\n    if (resp.status) {\r\n      const optionsTMP = optionList.options.filter((u) => u._id !== idOption)\r\n\r\n      setOptionList((old) => {\r\n        return {...old, options: optionsTMP}\r\n      })\r\n    }\r\n  }\r\n\r\n  if (optionList === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>\r\n  }\r\n  return (\r\n    <>\r\n        <Authentification />\r\n        \r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Option LIst {id}</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-danger\"\r\n                      className=\"mx-1\"\r\n                      onClick={() => deleteOptionListFunction(id)}\r\n                    >\r\n                      Suppprimer\r\n                    </CButton>\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => editOptionListFunction(id)}\r\n                    >\r\n                      Editer\r\n                    </CButton>\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTable>\r\n                <CTableBody>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Name</CTableDataCell>\r\n                    <CTableDataCell>{optionList.name}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>Description</CTableDataCell>\r\n                    <CTableDataCell>{optionList.description}</CTableDataCell>\r\n                  </CTableRow>\r\n                  <CTableRow>\r\n                    <CTableDataCell>type</CTableDataCell>\r\n                    <CTableDataCell>{optionList.type}</CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n          \r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Listes des Options</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => ajout()}\r\n                  >\r\n                    Ajout\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Prix</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {optionList?.options?.length > 0 ? (\r\n                  optionList?.options?.map((o) => (\r\n                    <CTableRow key={o._id}>\r\n                      <CTableDataCell>{o.name}</CTableDataCell>\r\n                      <CTableDataCell>{o.price}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color={'secondary'}\r\n                          className=\"m-1\"\r\n                          onClick={() => editOptionFunction(o._id, optionList._id)}\r\n                        >\r\n                          {' '}\r\n                          Editer{' '}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={'danger'}\r\n                          onClick={() => deleteOptionFunction(o._id)}\r\n                        >\r\n                          {' '}\r\n                          Supprimer{' '}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{'NO Items'}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default DetailOptionList","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptionLists = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/optionLists/${id}` : `${endpoint}/api/optionLists`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOptionList = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/optionLists/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOptionList = async (optionList, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/optionLists/${id}`, optionList, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/optionLists`, optionList, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptions = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/options/${id}` : `${endpoint}/api/options`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOption = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/options/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOption = async (option, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/options/${id}`, option, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/options`, option, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}