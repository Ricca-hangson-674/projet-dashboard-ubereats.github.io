{"version":3,"sources":["configs/variable.js","components/Message.js","provider/optionFetch.js","views/options/AjoutOption.js"],"names":["variable","env","endpointLocal","endpointProd","Message","variant","children","color","defaultProps","getOptions","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","addOption","option","reponse","put","post","schemaUser","yup","shape","name","required","price","AjoutOption","useState","setMessage","success","setSuccess","setError","setOption","history","useHistory","useParams","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","useEffect","console","log","fetch","resp","onSubmit","body","optionList","_id","xs","className","sm","onClick","params","push","back","md","htmlFor","type","invalid"],"mappings":"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","file":"static/js/28.f75de089.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptions = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/options/${id}` : `${endpoint}/api/options`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOption = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/options/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOption = async (option, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/options/${id}`, option, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/options`, option, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getOptions, addOption } from \"../../provider/optionFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  price: yup.number().required(\"price is required\"),\r\n});\r\n\r\nconst AjoutOption = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [option, setOption] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (id) {\r\n      async function fetch() {\r\n        const resp = await getOptions(null, id);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"price\", resp?.data.price);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [id, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n    const body = {...data, optionList: \"615f3773e92ecf47502c8568\"}\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addOption(body, id);\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n      resetField(\"name\");\r\n      resetField(\"price\");\r\n\r\n      setOption(resp?.data?._id)\r\n\r\n      setSuccess(true);\r\n    } else {\r\n      setError(true);\r\n      setMessage(resp?.error);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    const params = option ? [option] : []\r\n    history.push(`/ajout-optionList?options=${params}`);\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Option</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  required\r\n                  {...register(\"price\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutOption;\r\n"],"sourceRoot":""}