{"version":3,"sources":["components/Message.js","configs/variable.js","provider/userFetch.js","views/pages/register/Register.js"],"names":["Message","variant","children","color","defaultProps","variable","env","endpointLocal","endpointProd","getUsers","a","type","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","delete","registerUser","user","reponse","put","post","authentification","schemaUser","yup","shape","firstName","required","lastName","email","password","confirmPassword","oneOf","Register","useState","setMessage","success","setSuccess","setError","show","setShow","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isSubmitted","isValid","resetField","useEffect","console","log","onSubmit","resp","className","to","active","tabIndex","md","lg","xl","icon","cilUser","placeholder","autoComplete","invalid","cilLockLocked"],"mappings":"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","file":"static/js/18.76245fd1.chunk.js","sourcesContent":["import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","export const variable = {\r\n    env: 'prod',\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormFeedback,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport Message from \"../../../components/Message\";\n\nimport { registerUser } from \"../../../provider/userFetch\";\n\nconst schemaUser = yup.object().shape({\n  firstName: yup.string().required(\"firstName is required\"),\n  lastName: yup.string().required(\"lastName is required\"),\n  email: yup\n    .string()\n    .email(\"email must email valid\")\n    .required(\"email is required\"),\n  password: yup.string().required(\"password are required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nconst Register = () => {\n  /** State */\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [show, setShow] = useState(false);\n\n  /** Form Hook */\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting, isSubmitted, isValid },\n    resetField,\n  } = useForm({\n    resolver: yupResolver(schemaUser),\n    mode: \"onTouched\",\n  });\n\n  useEffect(() => {\n    console.log(\"useEffect\", isSubmitting, isValid);\n    if (isValid || isSubmitting || isSubmitted) {\n      setShow(true);\n    }\n  }, [isValid, isSubmitting, isSubmitted])\n\n  const onSubmit = async (data) => {\n    let resp = null;\n\n    console.log('onSubmit', isSubmitting, isSubmitted, isValid)\n\n    if (isValid || isSubmitting || isSubmitted) {\n      setShow(true);\n      console.log('condition', show)\n    }\n\n    if (show) {\n      /** reste */\n      setSuccess(false);\n      setError(false);\n      resp = await registerUser(data);\n    }\n\n    if (resp?.status) {\n      /** Reset */\n      resetField(\"email\");\n      resetField(\"password\");\n\n      setSuccess(true);\n    } else {\n      setError(true);\n      setMessage(resp?.error);\n    }\n  };\n\n  console.log(\"error\", errors, isSubmitting, isValid);\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          {error && <Message> {message}</Message>}\n          {success && (\n            <Message>\n              {`Success register`}\n\n              <Link to=\"/login\">\n                <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                  Login Now!\n                </CButton>\n              </Link>\n            </Message>\n          )}\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm\n                  className={`row g-3 needs-validation ${\n                    show && \"was-validated\"\n                  }`}\n                  onSubmit={handleSubmit(onSubmit)}\n                >\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"firstName\"\n                      autoComplete=\"firstName\"\n                      {...register(\"firstName\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.firstName?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"lastName\"\n                      autoComplete=\"lastName\"\n                      {...register(\"lastName\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.lastName?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      {...register(\"email\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.email?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      {...register(\"password\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.password?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      {...register(\"confirmPassword\")}\n                    />\n                    <CFormFeedback invalid>\n                      {errors.confirmPassword?.message}\n                    </CFormFeedback>\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" type=\"submit\">\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}