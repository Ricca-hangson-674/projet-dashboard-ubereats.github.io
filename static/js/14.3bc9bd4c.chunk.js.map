{"version":3,"sources":["components/Message.js","configs/variable.js","components/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","provider/restaurantFetch.js","views/restaurants/Restaurants.js"],"names":["Message","variant","children","color","defaultProps","variable","env","endpointLocal","endpointProd","Loader","className","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getRestaurants","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteRestaurant","delete","Restaurants","useState","restaurants","setRestaurants","setError","useEffect","resp","console","log","fetch","deleteFunction","old","filter","u","_id","xs","scope","length","map","restaurant","name","address","user","firstName","lastName","onClick"],"mappings":"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","file":"static/js/14.3bc9bd4c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","export const variable = {\r\n    env: 'prod',\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com'\r\n}","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getRestaurants = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/restaurants/${id}` : `${endpoint}/api/restaurants`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/restaurants/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport {\r\n  getRestaurants,\r\n  deleteRestaurant,\r\n} from \"../../provider/restaurantFetch\";\r\n\r\nconst Restaurants = () => {\r\n  /** State */\r\n  const [restaurants, setRestaurants] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getRestaurants();\r\n\r\n      resp?.status ? setRestaurants([...resp?.data]) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteRestaurant(id);\r\n\r\n    if (resp.status) {\r\n      setRestaurants((old) => old.filter((u) => u._id !== id));\r\n    }\r\n  };\r\n\r\n  if (restaurants === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>Listes des Clients</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Address</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Commercant</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {restaurants.length > 0 ? (\r\n                  restaurants.map((restaurant) => (\r\n                    <CTableRow key={restaurant._id}>\r\n                      <CTableDataCell>{restaurant.name}</CTableDataCell>\r\n                      <CTableDataCell>{restaurant.address}</CTableDataCell>\r\n                      <CTableDataCell>{restaurant.status}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        {restaurant.user.firstName} {restaurant.user.lastName}\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton color={\"primary\"} className=\"me-1\">\r\n                          {\" \"}\r\n                          Voir{\" \"}\r\n                        </CButton>\r\n                        <CButton color={\"secondary\"} className=\"me-1\">\r\n                          {\" \"}\r\n                          Editer{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"danger\"}\r\n                          onClick={() => deleteFunction(restaurant._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Supprimer{\" \"}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{\"NO Items\"}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n"],"sourceRoot":""}