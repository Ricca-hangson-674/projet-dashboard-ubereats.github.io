{"version":3,"sources":["views/clients/Clients.js","configs/variable.js","components/Message.js","components/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","provider/userFetch.js"],"names":["Clients","useState","users","setUsers","error","setError","history","useHistory","useEffect","a","getUsers","resp","status","data","console","log","fetch","deleteFunction","id","deleteUser","old","filter","u","_id","xs","className","scope","length","map","user","firstName","lastName","email","color","onClick","push","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","Loader","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","type","config","headers","endpoint","url","axios","get","message","response","delete","registerUser","reponse","put","post","authentification"],"mappings":"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","file":"static/js/17.a2e8737f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getUsers, deleteUser } from \"../../provider/userFetch\";\r\n\r\nconst Clients = () => {\r\n  /** State */\r\n  const [users, setUsers] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getUsers(\"client\");\r\n\r\n      resp?.status ? setUsers([...resp?.data]) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteUser(id);\r\n\r\n    if (resp.status) {\r\n      setUsers((old) => old.filter((u) => u._id !== id));\r\n    }\r\n  };\r\n\r\n  const handleNavigation = (id) => {\r\n    history.push(`/detail-client/${id}`);\r\n  };\r\n\r\n  if (users === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>Listes des Clients</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">FirstName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">LastName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {users.length > 0 ? (\r\n                  users.map((user) => (\r\n                    <CTableRow key={user._id}>\r\n                      <CTableDataCell>{user.firstName}</CTableDataCell>\r\n                      <CTableDataCell>{user.lastName}</CTableDataCell>\r\n                      <CTableDataCell>{user.email}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color={\"primary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => handleNavigation(user._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Voir{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"danger\"}\r\n                          onClick={() => deleteFunction(user._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Supprimer{\" \"}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <h3>{\"NO Items\"}</h3>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}"],"sourceRoot":""}