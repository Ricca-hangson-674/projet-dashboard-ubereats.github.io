{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","provider/userFetch.js","views/administrateurs/Administrateurs.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","Loader","className","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","getUsers","a","type","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","delete","registerUser","user","reponse","put","post","authentification","Administrateurs","useState","users","setUsers","setError","history","useHistory","useEffect","resp","console","log","fetch","deleteFunction","old","filter","u","_id","xs","sm","onClick","push","scope","length","map","firstName","lastName","email","colSpan"],"mappings":"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","file":"static/js/15.6926f0c6.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CButton,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getUsers, deleteUser } from \"../../provider/userFetch\";\r\n\r\nconst Administrateurs = () => {\r\n  /** State */\r\n  const [users, setUsers] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    async function fetch() {\r\n      const resp = await getUsers(\"admin\");\r\n\r\n      resp?.status ? setUsers([...resp?.data]) : setError(resp?.error);\r\n    }\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const deleteFunction = async (id) => {\r\n    const resp = await deleteUser(id);\r\n\r\n    if (resp.status) {\r\n      setUsers((old) => old.filter((u) => u._id !== id));\r\n    }\r\n  };\r\n\r\n  const handleNavigation = (id) => {\r\n    history.push(`/detail-admin/${id}`);\r\n  };\r\n\r\n  const ajout = () => {\r\n    history.push(`/ajout-admin`);\r\n  };\r\n\r\n  const edit = (id) => {\r\n    history.push(`/ajout-admin/${id}`);\r\n  };\r\n\r\n  if (users === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Message> {error}</Message>;\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Listes des Administrateurs</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => ajout()}\r\n                  >\r\n                    Ajout\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTable>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">FirstName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">LastName</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {users.length > 0 ? (\r\n                  users.map((user) => (\r\n                    <CTableRow key={user._id}>\r\n                      <CTableDataCell>{user.firstName}</CTableDataCell>\r\n                      <CTableDataCell>{user.lastName}</CTableDataCell>\r\n                      <CTableDataCell>{user.email}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color={\"primary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => handleNavigation(user._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Voir{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"secondary\"}\r\n                          className=\"me-1\"\r\n                          onClick={() => edit(user._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Editer{\" \"}\r\n                        </CButton>\r\n                        <CButton\r\n                          color={\"danger\"}\r\n                          onClick={() => deleteFunction(user._id)}\r\n                        >\r\n                          {\" \"}\r\n                          Supprimer{\" \"}\r\n                        </CButton>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <CTableRow>\r\n                    <CTableDataCell colSpan=\"4\">{\"NO Items\"}</CTableDataCell>\r\n                  </CTableRow>\r\n                )}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Administrateurs;\r\n"],"sourceRoot":""}