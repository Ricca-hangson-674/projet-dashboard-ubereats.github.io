{"version":3,"sources":["configs/variable.js","components/Message.js","provider/userFetch.js","views/pages/login/Login.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","getUsers","a","type","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteUser","delete","registerUser","user","reponse","put","post","authentification","schemaUser","yup","shape","email","required","password","Login","useState","setMessage","success","setSuccess","setError","history","useHistory","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","onSubmit","resp","localStorage","setItem","JSON","stringify","push","className","md","noValidate","icon","cilUser","invalid","placeholder","autoComplete","cilLockLocked","xs","style","width","to","active","tabIndex"],"mappings":"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","file":"static/js/33.f19eeef6.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getUsers = async (type = null, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let url = null\r\n\r\n        if (id) {\r\n            url  = `${endpoint}/api/users/${id}`\r\n        } else if (type) {\r\n            url  = `${endpoint}/api/users?type=${type}`\r\n        } else {\r\n            url = `${endpoint}/api/users`\r\n        }\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/users/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const registerUser = async (user, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/users/${id}`, user, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/users`, user, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const authentification =  async (user) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.post(`${endpoint}/api/users/login`, user, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n\r\n}","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormFeedback,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport Message from \"../../../components/Message\";\n\nimport { authentification } from \"../../../provider/userFetch\";\n\nconst schemaUser = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"email must email valid\")\n    .required(\"email is required\"),\n  password: yup.string().required(\"password are required\"),\n});\n\nconst Login = () => {\n  /** State */\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n\n  /** Hook Route */\n  let history = useHistory();\n\n  /** Form Hook */\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting, isValid },\n    resetField,\n  } = useForm({\n    resolver: yupResolver(schemaUser),\n    mode: \"onTouched\",\n  });\n\n  const onSubmit = async (data) => {\n    let resp = null;\n\n    if (isValid) {\n      /** reste */\n      setSuccess(false);\n      setError(false);\n      resp = await authentification(data);\n    }\n\n    if (resp?.status) {\n      /** Reset */\n      resetField(\"email\");\n      resetField(\"password\");\n\n      setSuccess(true);\n\n      /** Store */\n      localStorage.setItem(\"user\", JSON.stringify(resp?.data));\n\n      history.push(\"/\");\n    } else {\n      setError(true);\n      setMessage(resp?.error);\n    }\n  };\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        {error && <Message> {message}</Message>}\n        {success && <Message> {`Success Ajout ou Edite`}</Message>}\n\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                    className={`row g-3`}\n                    noValidate\n                    onSubmit={handleSubmit(onSubmit)}\n                  >\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">\n                      Sign In to your account\n                    </p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        invalid={errors.email?.message ? true : false}\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                        {...register(\"email\")}\n                      />\n                      <CFormFeedback invalid>\n                        {errors.email?.message}\n                      </CFormFeedback>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        invalid={errors.password?.message ? true : false}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        {...register(\"password\")}\n                      />\n                      <CFormFeedback invalid>\n                        {errors.password?.message}\n                      </CFormFeedback>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton\n                          color=\"primary\"\n                          type=\"submit\"\n                          className={`px-4 ${isSubmitting ? \"disabled\" : \" \"}`}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" type=\"button\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard\n                className=\"text-white bg-primary py-5\"\n                style={{ width: \"44%\" }}\n              >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\n                      aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton\n                        color=\"primary\"\n                        className=\"mt-3\"\n                        active\n                        tabIndex={-1}\n                      >\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}