{"version":3,"sources":["views/options/AjoutOption.js","configs/variable.js","components/Message.js","provider/optionFetch.js"],"names":["schemaUser","yup","shape","name","required","price","AjoutOption","useState","message","setMessage","success","setSuccess","error","setError","option","setOption","history","useHistory","idOption","useParams","id","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","optionList","has","get","useForm","resolver","yupResolver","mode","register","handleSubmit","formState","errors","isSubmitting","isValid","setValue","useEffect","console","log","fetch","a","getOptions","resp","status","data","onSubmit","body","addOption","_id","xs","className","sm","color","onClick","params","push","back","md","htmlFor","type","invalid","step","variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","defaultProps","config","headers","endpoint","url","axios","response","deleteOption","delete","reponse","put","post"],"mappings":"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","file":"static/js/29.a628af8f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n} from \"@coreui/react\";\r\n\r\nimport { Authentification } from \"../../components/index\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getOptions, addOption } from \"../../provider/optionFetch\";\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required(\"name is required\"),\r\n  price: yup.number().required(\"price is required\"),\r\n});\r\n\r\nconst AjoutOption = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [option, setOption] = useState(false);\r\n\r\n  /** Hook Route */\r\n  let history = useHistory();\r\n  let { id: idOption } = useParams();\r\n  const paramQuery = window.location.hash;\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf(\"?\"))\r\n  );\r\n  const optionList = paramsJS.has(\"optionList\") ? paramsJS.get(\"optionList\") : [];\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    // resetField,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log(\"Run once, when the component mounts\");\r\n\r\n    if (idOption) {\r\n      async function fetch() {\r\n        const resp = await getOptions(idOption);\r\n\r\n        if (resp?.status) {\r\n          setValue(\"name\", resp?.data.name);\r\n          setValue(\"price\", resp?.data.price);\r\n        } else {\r\n          setMessage(resp?.error);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    }\r\n  }, [idOption, setValue]);\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null;\r\n    // optionList Default\r\n    const body = {...data, optionList: \"615f3771a12ecf47502c851b\"}\r\n\r\n    if (isValid) {\r\n      /** reste */\r\n      setSuccess(false);\r\n      setError(false);\r\n      resp = await addOption(body, idOption);\r\n    }\r\n\r\n    if (resp?.status) {\r\n      /** Reset */\r\n      // resetField(\"name\");\r\n      // resetField(\"price\");\r\n\r\n      setOption(resp?.data?._id)\r\n\r\n      setSuccess(true);\r\n    } else {\r\n      setError(true);\r\n      setMessage(resp?.error);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    const params = option ? [option] : []\r\n    if (idOption) {\r\n      history.push(`/option-list/${optionList}`);\r\n    } else {\r\n      history.push(`/ajout-optionList?options=${params}`);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <Authentification />\r\n      {error && <Message> {message}</Message>}\r\n      {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol sm={5}>\r\n                <strong>Ajout Option</strong>\r\n              </CCol>\r\n              <CCol sm={7}>\r\n                <CButtonGroup className=\"float-end me-3\">\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    className=\"mx-0\"\r\n                    onClick={() => back()}\r\n                  >\r\n                    Retour\r\n                  </CButton>\r\n                </CButtonGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm\r\n              className={`row g-3 needs-validation ${\r\n                isValid && \"was-validated\"\r\n              }`}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  {...register(\"name\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={6}>\r\n                <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                <CFormInput\r\n                  type=\"number\"\r\n                  step={\"any\"}\r\n                  id=\"price\"\r\n                  required\r\n                  {...register(\"price\")}\r\n                />\r\n                <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n              </CCol>\r\n              <CCol xs={12}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={isSubmitting ? \"disabled\" : \" \"}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default AjoutOption;\r\n","export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptions = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/options/${id}` : `${endpoint}/api/options`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOption = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/options/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOption = async (option, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/options/${id}`, option, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/options`, option, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}"],"sourceRoot":""}