{"version":3,"sources":["configs/variable.js","components/Message.js","components/Loader.js","provider/optionListFetch.js","provider/foodFetch.js","provider/categorieFetch.js","views/foods/AjoutFood.js"],"names":["variable","env","endpointLocal","endpointProd","endpointFront","Message","variant","children","color","defaultProps","Loader","className","getOptionLists","a","id","config","headers","endpoint","url","axios","get","data","status","message","response","error","deleteOptionList","delete","addOptionList","optionList","reponse","put","post","getFoods","deletefood","addFood","food","getCategories","addCategorie","categorie","schemaUser","yup","shape","name","required","description","price","typeError","category","optionLists","isPopular","available","promotion","AjoutFood","useState","setMessage","success","setSuccess","setError","categories","setCategories","setOptionLists","visible","setVisible","handleFileSelect","e","history","useHistory","foodId","useParams","paramQuery","window","location","hash","paramsJS","URLSearchParams","substring","lastIndexOf","restaurantParam","has","categoryParam","optionListsParam","console","log","useForm","resolver","yupResolver","mode","defaultValues","priceDrop","register","handleSubmit","formState","errors","isSubmitting","isValid","resetField","setValue","control","useEffect","resp","resp1","map","o","value","_id","label","fetch","length","optionListTMP","onSubmit","body","restaurant","optionListFor","foods","xs","sm","onClick","push","htmlFor","style","display","type","onChange","noValidate","md","invalid","step","defaultValue","c","to","render","field","onBlur","isMulti","options","size","onClose"],"mappings":"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","file":"static/js/9.c4ebe945.chunk.js","sourcesContent":["export const variable = {\r\n    env: 'prod', // local | prod\r\n    endpointLocal: 'http://127.0.0.1:5059',\r\n    endpointProd:'https://projet-eats-nrh.herokuapp.com',\r\n    endpointFront:'http://localhost:3232',\r\n}","import React from 'react'\r\nimport {CAlert} from '@coreui/react'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <CAlert color={variant}>\r\n        { children }\r\n    </CAlert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {CSpinner} from '@coreui/react'\r\n\r\nconst Loader = () => {\r\n    return <>\r\n    <CSpinner color=\"primary\" >\r\n        <span className='sr-only'>Loading ...</span>\r\n    </CSpinner>\r\n    </>\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getOptionLists = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/optionLists/${id}` : `${endpoint}/api/optionLists`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteOptionList = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/optionLists/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addOptionList = async (optionList, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/optionLists/${id}`, optionList, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/optionLists`, optionList, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getFoods = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/foods/${id}` : `${endpoint}/api/foods`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deletefood = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/foods/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addFood = async (food, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/foods/${id}`, food, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/foods`, food, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import axios from 'axios'\r\nimport { variable } from '../configs/variable'\r\n\r\nexport const getCategories = async (id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const url  = id ? `${endpoint}/api/categories/${id}` : `${endpoint}/api/categories`\r\n\r\n        const { data } = await axios.get(`${url}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const deleteCategorie = async (id) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        const { data } = await axios.delete(`${endpoint}/api/categories/${id}`, config)\r\n\r\n        return {status: true, data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}\r\n\r\nexport const addCategorie = async (categorie, id = null) => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const endpoint = variable.env === 'local' ? variable.endpointLocal : variable.endpointProd\r\n\r\n        let reponse = null\r\n\r\n        if (id) {\r\n            reponse =  await axios.put(`${endpoint}/api/categories/${id}`, categorie, config)\r\n        } else {\r\n            reponse =  await axios.post(`${endpoint}/api/categories`, categorie, config)\r\n        }\r\n\r\n        return {status: true, data: reponse?.data}\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        \r\n        return {status: false, error: message}\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CButtonGroup,\r\n  CFormSwitch,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nimport Select from 'react-select'\r\n\r\nimport { Authentification } from '../../components/index'\r\n\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\n\r\nimport { getFoods, addFood } from '../../provider/foodFetch'\r\nimport { getOptionLists, addOptionList } from '../../provider/optionListFetch'\r\nimport { getCategories, addCategorie } from '../../provider/categorieFetch'\r\n\r\nconst schemaUser = yup.object().shape({\r\n  name: yup.string().required('name is required'),\r\n  description: yup.string().required('description is required'),\r\n  price: yup\r\n    .number()\r\n    .typeError('price must be a `number` type')\r\n    .required('price are required'),\r\n  // priceDrop: yup.number(),\r\n  // priceDrop: yup.nullable(),\r\n  category: yup.string().required('categorie are required'),\r\n  optionLists: yup.array(),\r\n  isPopular: yup.boolean(),\r\n  available: yup.boolean(),\r\n  promotion: yup.boolean(),\r\n  // countInStock: yup.number().required(\"priceDrop are required\"),\r\n})\r\n\r\nconst AjoutFood = () => {\r\n  /** State */\r\n  const [message, setMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [categories, setCategories] = useState(null)\r\n  const [optionLists, setOptionLists] = useState(null)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  /** Image */\r\n\r\n  /* const handleUploadJSON = () => {\r\n\r\n  } */\r\n\r\n  const handleFileSelect = async (e) => {\r\n    setVisible(true)\r\n  }\r\n\r\n  /** Hook Route */\r\n  let history = useHistory()\r\n  let { id: foodId } = useParams()\r\n  const paramQuery = window.location.hash\r\n  const paramsJS = new URLSearchParams(\r\n    paramQuery.substring(paramQuery.lastIndexOf('?'))\r\n  )\r\n  const restaurantParam = paramsJS.has('restaurant')\r\n    ? paramsJS.get('restaurant')\r\n    : 'restaurant'\r\n  const categoryParam = paramsJS.has('category')\r\n    ? paramsJS.get('category')\r\n    : 'category'\r\n  const optionListsParam = paramsJS.has('optionLists')\r\n    ? paramsJS.get('optionLists')\r\n    : []\r\n\r\n  console.log(\r\n    'params',\r\n    paramQuery.substring(paramQuery.lastIndexOf('?')),\r\n    categoryParam,\r\n    optionListsParam,\r\n    restaurantParam\r\n  )\r\n\r\n  /** Form Hook */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n    resetField,\r\n    setValue,\r\n    // getValues,\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaUser),\r\n    mode: 'onTouched',\r\n    defaultValues: { priceDrop: 0 },\r\n  })\r\n\r\n  /** Run once, when the component mounts */\r\n  useEffect(() => {\r\n    console.log('Run once, when the component mounts ')\r\n\r\n    async function fetch() {\r\n      const resp = await getOptionLists(null, null)\r\n\r\n      const resp1 = await getCategories(null, null)\r\n\r\n      if (resp?.status) {\r\n        setOptionLists([\r\n          ...resp.data.map((o) => {\r\n            return { value: o._id, label: o.name }\r\n          }),\r\n        ])\r\n      } else {\r\n        setMessage(resp?.error)\r\n      }\r\n\r\n      if (resp1?.status) {\r\n        setCategories([...resp1.data])\r\n      } else {\r\n        setMessage(resp1?.error)\r\n      }\r\n    }\r\n\r\n    fetch()\r\n  }, [])\r\n\r\n  /** Dependency */\r\n  useEffect(() => {\r\n    console.log('useEffect, Dependency')\r\n\r\n    if (foodId) {\r\n      async function fetch() {\r\n        const resp = await getFoods(foodId)\r\n\r\n        console.log('resp', resp)\r\n\r\n        if (resp?.status) {\r\n          setValue('name', resp?.data.name)\r\n          setValue('description', resp?.data.description)\r\n          setValue('price', resp?.data.price)\r\n          setValue('priceDrop', resp?.data.priceDrop)\r\n          setValue('category', resp?.data.category._id)\r\n          setValue('isPopular', resp?.data.isPopular)\r\n          setValue('available', resp?.data.available)\r\n          setValue('promotion', resp?.data.promotion)\r\n          // setValue(\"countInStock\", resp?.data.countInStock);\r\n\r\n          if (resp?.data.optionLists) {\r\n            if (resp?.data.optionLists.length) {\r\n              /** optionLists */\r\n              const optionListTMP = resp?.data.optionLists.map((o) => {\r\n                return { value: o._id, label: o.name }\r\n              })\r\n              setValue('optionLists', optionListTMP)\r\n            }\r\n          }\r\n        } else {\r\n          setMessage(resp?.error)\r\n        }\r\n      }\r\n\r\n      fetch()\r\n    }\r\n  }, [foodId, setValue])\r\n\r\n  const onSubmit = async (data) => {\r\n    let resp = null\r\n    let body = null\r\n\r\n    if (data?.optionLists) {\r\n      if (data?.optionLists?.length)\r\n        body = { ...data, optionLists: data.optionLists.map((o) => o.value) }\r\n    } else {\r\n      console.log('body', body)\r\n      body = { ...data }\r\n    }\r\n\r\n    console.log('onSubmit', data, body)\r\n    // console.log(\"isValid\", isValid);\r\n\r\n    if (isValid && body) {\r\n      /** reste */\r\n      setSuccess(false)\r\n      setError(false)\r\n      resp = await addFood(body, foodId)\r\n    }\r\n\r\n    if (resp?.status) {\r\n      if (!foodId) {\r\n        /** Reset */\r\n        resetField('name')\r\n        resetField('description')\r\n        resetField('price')\r\n        resetField('priceDrop')\r\n        resetField('category')\r\n        resetField('optionLists')\r\n        resetField('isPopular')\r\n        resetField('available')\r\n        resetField('promotion')\r\n        // resetField(\"countInStock\");\r\n      }\r\n\r\n      if (body.category) {\r\n        if (restaurantParam)\r\n          await addCategorie({ restaurant: restaurantParam }, body.category)\r\n      }\r\n\r\n      if (body.optionLists) {\r\n        if (body.optionLists.length) {\r\n          for (const optionListFor of body.optionLists) {\r\n            await addOptionList({ foods: [resp?.data?._id] }, optionListFor)\r\n          }\r\n        }\r\n      }\r\n\r\n      setSuccess(true)\r\n    } else {\r\n      setError(true)\r\n      setMessage(resp?.error)\r\n    }\r\n  }\r\n\r\n  const back = () => {\r\n    history.push(`/restaurants`)\r\n  }\r\n\r\n  if (categories === null || optionLists === null) {\r\n    return <Loader />\r\n  }\r\n\r\n  console.log('errors', errors)\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Authentification />\r\n        {error && <Message> {message}</Message>}\r\n        {success && <Message> {`Success Ajout ou Edite`}</Message>}\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm={5}>\r\n                  <strong>Ajout Food</strong>\r\n                </CCol>\r\n                <CCol sm={7}>\r\n                  <CButtonGroup className=\"float-end me-3\">\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-0\"\r\n                      onClick={() => back()}\r\n                    >\r\n                      Retour\r\n                    </CButton>\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRH\"\r\n                    >\r\n                      Ajout image\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRH\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                      onChange={handleFileSelect}\r\n                    />\r\n                    <label\r\n                      className=\"btn btn-outline-primary mx-1\"\r\n                      htmlFor=\"imageNRHItem\"\r\n                    >\r\n                      Upload Items\r\n                    </label>\r\n                    <input\r\n                      id=\"imageNRHItem\"\r\n                      style={{\r\n                        display: 'none',\r\n                      }}\r\n                      type=\"file\"\r\n                    />\r\n                  </CButtonGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm\r\n                noValidate\r\n                className={`row g-3`}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n              >\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    required\r\n                    {...register('name')}\r\n                    invalid={errors.name ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"lastName\">Description</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    required\r\n                    {...register('description')}\r\n                    invalid={errors.description ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.description?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"price\">Price</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    step={\"any\"}\r\n                    required\r\n                    {...register('price')}\r\n                    invalid={errors.price ? true : false}\r\n                  />\r\n                  <CFormFeedback invalid>{errors.price?.message}</CFormFeedback>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"priceDrop\">PriceDrop</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    id=\"priceDrop\"\r\n                    step={\"any\"}\r\n                    {...register('priceDrop')}\r\n                  />\r\n                  <CFormFeedback invalid>\r\n                    {errors.priceDrop?.message}\r\n                  </CFormFeedback>\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"isPopular\"\r\n                    id=\"isPopular\"\r\n                    {...register('isPopular')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"available\"\r\n                    id=\"available\"\r\n                    {...register('available')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={3}>\r\n                  <CFormSwitch\r\n                    label=\"promotion\"\r\n                    id=\"promotion\"\r\n                    {...register('promotion')}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"categorie\">Categorie</CFormLabel>\r\n                  <CFormSelect\r\n                    aria-label=\"Categorie\"\r\n                    id=\"categorie\"\r\n                    required\r\n                    {...register('category')}\r\n                    invalid={errors.category ? true : false}\r\n                    defaultValue={categories[0]?._id && categories[0]?._id}\r\n                  >\r\n                    {categories?.length &&\r\n                      categories.map((c) => (\r\n                        <option value={c._id} key={c._id}>\r\n                          {c.name}\r\n                        </option>\r\n                      ))}\r\n                  </CFormSelect>\r\n                  <CFormFeedback invalid>\r\n                    {errors.category?.message}\r\n                  </CFormFeedback>\r\n                  <small className=\"form-text text-muted\">\r\n                    <Link to={`/ajout-categorie?restaurant=${restaurantParam}`}>\r\n                      Ajouter une categorie\r\n                    </Link>{' '}\r\n                  </small>\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"optionLists\">Option Liste</CFormLabel>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"optionLists\"\r\n                    render={({\r\n                      field: { onChange, onBlur, value, name },\r\n                      // field,\r\n                      // fieldState: { error },\r\n                    }) => (\r\n                      <>\r\n                        <Select\r\n                          defaultValue={value}\r\n                          value={value}\r\n                          name={name}\r\n                          onBlur={onBlur}\r\n                          onChange={onChange}\r\n                          // {...field}\r\n                          isMulti\r\n                          options={optionLists}\r\n                        />\r\n                        <small className=\"form-text text-muted\">\r\n                          <Link\r\n                            to={`/ajout-optionList?foods=${`foods`}&options=${`options`}`}\r\n                          >\r\n                            Ajouter un option Liste\r\n                          </Link>{' '}\r\n                        </small>\r\n                        {errors.optionLists?.message && (\r\n                          <div\r\n                            style={{ display: 'block' }}\r\n                            className=\"invalid-feedback\"\r\n                          >\r\n                            {errors.optionLists?.message}\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  />\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={isSubmitting ? 'disabled' : ' '}\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\r\n        <CModalHeader onClose={() => setVisible(false)}>\r\n          <CModalTitle>Upload Image</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CModalTitle>Image</CModalTitle>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n            Close\r\n          </CButton>\r\n          <CButton color=\"primary\">Save changes</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\nexport default AjoutFood\r\n"],"sourceRoot":""}